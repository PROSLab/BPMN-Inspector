{"version":3,"file":"LoggerFactory.js","sourceRoot":"","sources":["src/LoggerFactory.ts"],"names":[],"mappings":"AAAA,OAAO,IAAI,MAAM,MAAM,CAAC;AACxB,OAAO,UAAU,MAAM,aAAa,CAAC;AASrC,MAAM,CAAC,OAAO,OAAO,aAAa;IACvB,SAAS,GAAG,IAAI,GAAG,EAAuB,CAAC;IAC3C,OAAO,CAAc;IAE9B,YAAY,EAAE,IAAI,EAAE,OAAO,EAAiB;QAC1C,MAAM,MAAM,GAAG,UAAU,CAAC;YACxB,MAAM,EAAE,MAAM;SACf,CAAC,CAAC;QAEH,IAAI,CAAC,OAAO,GAAG,IAAI,CACjB;YACE,IAAI,EAAE,SAAS;YACf,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,MAAM;YACjC,IAAI,EAAE,IAAI,IAAI,OAAO;SACtB,EACD,MAAM,CACP,CAAC;IACJ,CAAC;IAED,IAAI,MAAM;QACR,OAAO,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAED,GAAG,CAAC,MAAc;QAChB,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAC9B,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAE,CAAC;SACpC;QAED,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,CAAC,CAAC;QAC7C,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;QAClC,OAAO,KAAK,CAAC;IACf,CAAC;CACF","sourcesContent":["import Pino from 'pino';\nimport PinoPretty from 'pino-pretty';\n\nexport type Logger = Pino.Logger;\n\nexport type LoggerOptions = Readonly<{\n  name?: string;\n  verbose?: boolean;\n}>;\n\nexport default class LoggerFactory {\n  readonly #children = new Map<string, Pino.Logger>();\n  readonly #logger: Pino.Logger;\n\n  constructor({ name, verbose }: LoggerOptions) {\n    const pretty = PinoPretty({\n      ignore: 'time',\n    });\n\n    this.#logger = Pino(\n      {\n        base: undefined,\n        level: verbose ? 'debug' : 'info',\n        name: name ?? 'tsgen',\n      },\n      pretty,\n    );\n  }\n\n  get global(): Pino.Logger {\n    return this.#logger;\n  }\n\n  for(caller: string): Pino.Logger {\n    if (this.#children.has(caller)) {\n      return this.#children.get(caller)!;\n    }\n\n    const child = this.#logger.child({ caller });\n    this.#children.set(caller, child);\n    return child;\n  }\n}\n"]}