import { createElement, useCallback, useReducer, } from 'react';
import { createPortal } from 'react-dom';
const initialState = new Map();
function rendererReducer(state, [root, ...args]) {
    return new Map(state).set(root, args);
}
export function useRenderer(reactRendererOrNode, convert) {
    const [map, update] = useReducer(rendererReducer, initialState);
    const renderer = useCallback(((...args) => update(args)), []);
    return reactRendererOrNode
        ? [
            Array.from(map.entries()).map(([root, args]) => createPortal(convert
                ? createElement(reactRendererOrNode, convert(args))
                : reactRendererOrNode, root)),
            renderer,
        ]
        : [];
}
//# sourceMappingURL=useRenderer.js.map