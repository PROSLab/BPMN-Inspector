{"version":3,"file":"useRenderer.js","sourceRoot":"","sources":["../src/renderers/useRenderer.ts"],"names":[],"mappings":"AAAA,OAAO,EAEL,aAAa,EAIb,WAAW,EACX,UAAU,GACX,MAAM,OAAO,CAAC;AACf,OAAO,EAAE,YAAY,EAAE,MAAM,WAAW,CAAC;AAQzC,MAAM,YAAY,GAAG,IAAI,GAAG,EAAE,CAAC;AAE/B,SAAS,eAAe,CACtB,KAAgD,EAChD,CAAC,IAAI,EAAE,GAAG,IAAI,CAAgB;IAE9B,OAAO,IAAI,GAAG,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,EAAE,IAA+B,CAAC,CAAC;AACnE,CAAC;AAOD,MAAM,UAAU,WAAW,CACzB,mBAAoE,EACpE,OAAkE;IAElE,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,GAAG,UAAU,CAA4B,eAAe,EAAE,YAAY,CAAC,CAAC;IAC3F,MAAM,QAAQ,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,IAAmB,EAAE,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC,CAAM,EAAE,EAAE,CAAC,CAAC;IAElF,OAAO,mBAAmB;QACxB,CAAC,CAAC;YACE,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,EAAE,CAC7C,YAAY,CACV,OAAO;gBACL,CAAC,CAAC,aAAa,CAAI,mBAAuC,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;gBAC1E,CAAC,CAAE,mBAAiC,EACtC,IAAI,CACL,CACF;YACD,QAAQ;SACT;QACH,CAAC,CAAC,EAAE,CAAC;AACT,CAAC","sourcesContent":["import {\n  type ComponentType,\n  createElement,\n  type PropsWithChildren,\n  type ReactElement,\n  ReactNode,\n  useCallback,\n  useReducer,\n} from 'react';\nimport { createPortal } from 'react-dom';\nimport type { Slice, WebComponentRenderer } from './renderer.js';\n\nexport type UseRendererResult<W extends WebComponentRenderer> = readonly [\n  portals?: ReadonlyArray<ReactElement | null>,\n  renderer?: W,\n];\n\nconst initialState = new Map();\n\nfunction rendererReducer<W extends WebComponentRenderer>(\n  state: Map<HTMLElement, Slice<Parameters<W>, 1>>,\n  [root, ...args]: Parameters<W>,\n): Map<HTMLElement, Slice<Parameters<W>, 1>> {\n  return new Map(state).set(root, args as Slice<Parameters<W>, 1>);\n}\n\nexport function useRenderer<W extends WebComponentRenderer>(node: ReactNode): UseRendererResult<W>;\nexport function useRenderer<P extends {}, W extends WebComponentRenderer>(\n  reactRenderer: ComponentType<P> | null | undefined,\n  convert: (props: Slice<Parameters<W>, 1>) => PropsWithChildren<P>,\n): UseRendererResult<W>;\nexport function useRenderer<P extends {}, W extends WebComponentRenderer>(\n  reactRendererOrNode: ReactNode | ComponentType<P> | null | undefined,\n  convert?: (props: Slice<Parameters<W>, 1>) => PropsWithChildren<P>,\n): UseRendererResult<W> {\n  const [map, update] = useReducer<typeof rendererReducer<W>>(rendererReducer, initialState);\n  const renderer = useCallback(((...args: Parameters<W>) => update(args)) as W, []);\n\n  return reactRendererOrNode\n    ? [\n        Array.from(map.entries()).map(([root, args]) =>\n          createPortal(\n            convert\n              ? createElement<P>(reactRendererOrNode as ComponentType<P>, convert(args))\n              : (reactRendererOrNode as ReactNode),\n            root,\n          ),\n        ),\n        renderer,\n      ]\n    : [];\n}\n"]}