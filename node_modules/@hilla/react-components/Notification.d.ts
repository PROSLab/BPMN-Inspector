import { type ComponentType, type ForwardRefExoticComponent, type PropsWithoutRef, type ReactNode, type RefAttributes } from 'react';
import { type NotificationProps as _NotificationProps, WebComponentModule } from './generated/Notification.js';
import type { ReactSimpleRendererProps } from './renderers/useSimpleRenderer.js';
export * from './generated/Notification.js';
export type NotificationReactRendererProps = ReactSimpleRendererProps<WebComponentModule.Notification>;
export type NotificationProps = Omit<_NotificationProps, 'children' | 'renderer'> & Readonly<{
    children?: ReactNode | ComponentType<NotificationReactRendererProps>;
    renderer?: ComponentType<NotificationReactRendererProps>;
}>;
export type NotificationFunction = ForwardRefExoticComponent<PropsWithoutRef<NotificationProps> & RefAttributes<WebComponentModule.Notification>> & {
    show(contents: string, options?: WebComponentModule.ShowOptions): WebComponentModule.Notification;
};
declare const ForwardedNotification: NotificationFunction;
export { ForwardedNotification as Notification, WebComponentModule };
//# sourceMappingURL=Notification.d.ts.map