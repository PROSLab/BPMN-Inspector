import type { ComboBoxDefaultItem } from '@vaadin/combo-box';
import { type ComponentType, type ForwardedRef, type ReactElement } from 'react';
import { type ComboBoxProps as _ComboBoxProps, WebComponentModule } from './generated/ComboBox.js';
import type { ComboBoxReactRendererProps } from './renderers/combobox.js';
export * from './generated/ComboBox.js';
export type ComboBoxProps<TItem> = Omit<_ComboBoxProps<TItem>, 'renderer'> & Readonly<{
    renderer?: ComponentType<ComboBoxReactRendererProps<TItem>> | null;
}>;
declare function ComboBox<TItem = ComboBoxDefaultItem>(props: ComboBoxProps<TItem>, ref: ForwardedRef<WebComponentModule.ComboBox<TItem>>): ReactElement | null;
declare const ForwardedComboBox: <TItem = any>(props: Omit<import("./utils/createComponent.js").ThemedWebComponentProps<WebComponentModule.ComboBox<TItem>, Readonly<{
    onValidated: import("@lit-labs/react").EventName<WebComponentModule.ComboBoxValidatedEvent>;
    onChange: import("@lit-labs/react").EventName<WebComponentModule.ComboBoxChangeEvent<TItem>>;
    onInput: import("@lit-labs/react").EventName<Event>;
    onCustomValueSet: import("@lit-labs/react").EventName<WebComponentModule.ComboBoxCustomValueSetEvent>;
    onSelectedItemChanged: import("@lit-labs/react").EventName<WebComponentModule.ComboBoxSelectedItemChangedEvent<TItem>>;
    onValueChanged: import("@lit-labs/react").EventName<WebComponentModule.ComboBoxValueChangedEvent>;
    onInvalidChanged: import("@lit-labs/react").EventName<WebComponentModule.ComboBoxInvalidChangedEvent>;
    onOpenedChanged: import("@lit-labs/react").EventName<WebComponentModule.ComboBoxOpenedChangedEvent>;
    onFilterChanged: import("@lit-labs/react").EventName<WebComponentModule.ComboBoxFilterChangedEvent>;
}>>, "renderer"> & Readonly<{
    renderer?: ComponentType<Readonly<{
        item: TItem;
        model: WebComponentModule.ComboBoxItemModel<TItem>;
        original: WebComponentModule.ComboBox<TItem>;
    }>> | null | undefined;
}> & {
    ref?: ForwardedRef<WebComponentModule.ComboBox<TItem>> | undefined;
}) => ReactElement | null;
export { ForwardedComboBox as ComboBox, WebComponentModule };
//# sourceMappingURL=ComboBox.d.ts.map