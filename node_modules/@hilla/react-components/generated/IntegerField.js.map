{"version":3,"file":"IntegerField.js","sourceRoot":"","sources":["../src/generated/IntegerField.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,kBAAkB,MAAM,+CAA+C,CAAC;AACpF,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,eAAe,EAAqB,MAAM,6BAA6B,CAAC;AAQjF,MAAM,MAAM,GAAG,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAA0B,CAAC;AAEhL,MAAM,CAAC,MAAM,YAAY,GAAG,eAAe,CAAC;IACxC,YAAY,EAAE,kBAAkB,CAAC,YAAY;IAC7C,MAAM;IACN,KAAK,EAAE,KAAK;IACZ,OAAO,EAAE,sBAAsB;CAClC,CAAC,CAAC;AACH,OAAO,EAAE,kBAAkB,EAAE,CAAC","sourcesContent":["import type { EventName } from \"@lit-labs/react\";\nimport * as WebComponentModule from \"@vaadin/integer-field/vaadin-integer-field.js\";\nimport * as React from \"react\";\nimport { createComponent, WebComponentProps } from \"../utils/createComponent.js\";\nexport type IntegerFieldEventMap = Readonly<{\n    onValidated: EventName<WebComponentModule.IntegerFieldEventMap[\"validated\"]>;\n    onChange: EventName<WebComponentModule.IntegerFieldEventMap[\"change\"]>;\n    onInput: EventName<WebComponentModule.IntegerFieldEventMap[\"input\"]>;\n    onInvalidChanged: EventName<WebComponentModule.IntegerFieldEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<WebComponentModule.IntegerFieldEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as IntegerFieldEventMap;\nexport type IntegerFieldProps = WebComponentProps<WebComponentModule.IntegerField, IntegerFieldEventMap>;\nexport const IntegerField = createComponent({\n    elementClass: WebComponentModule.IntegerField,\n    events,\n    react: React,\n    tagName: \"vaadin-integer-field\"\n});\nexport { WebComponentModule };\n"]}