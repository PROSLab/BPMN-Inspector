import type { EventName } from "@lit-labs/react";
import * as WebComponentModule from "@vaadin/integer-field/vaadin-integer-field.js";
import { WebComponentProps } from "../utils/createComponent.js";
export type IntegerFieldEventMap = Readonly<{
    onValidated: EventName<WebComponentModule.IntegerFieldEventMap["validated"]>;
    onChange: EventName<WebComponentModule.IntegerFieldEventMap["change"]>;
    onInput: EventName<WebComponentModule.IntegerFieldEventMap["input"]>;
    onInvalidChanged: EventName<WebComponentModule.IntegerFieldEventMap["invalid-changed"]>;
    onValueChanged: EventName<WebComponentModule.IntegerFieldEventMap["value-changed"]>;
}>;
export type IntegerFieldProps = WebComponentProps<WebComponentModule.IntegerField, IntegerFieldEventMap>;
export declare const IntegerField: import("../utils/createComponent.js").ThemedReactWebComponent<WebComponentModule.IntegerField, Readonly<{
    onValidated: EventName<WebComponentModule.IntegerFieldEventMap["validated"]>;
    onChange: EventName<WebComponentModule.IntegerFieldEventMap["change"]>;
    onInput: EventName<WebComponentModule.IntegerFieldEventMap["input"]>;
    onInvalidChanged: EventName<WebComponentModule.IntegerFieldEventMap["invalid-changed"]>;
    onValueChanged: EventName<WebComponentModule.IntegerFieldEventMap["value-changed"]>;
}>>;
export { WebComponentModule };
//# sourceMappingURL=IntegerField.d.ts.map