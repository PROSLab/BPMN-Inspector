import type { EventName } from "@lit-labs/react";
import * as WebComponentModule from "@vaadin/date-picker/vaadin-date-picker.js";
import { WebComponentProps } from "../utils/createComponent.js";
export type DatePickerEventMap = Readonly<{
    onValidated: EventName<WebComponentModule.DatePickerEventMap["validated"]>;
    onChange: EventName<WebComponentModule.DatePickerEventMap["change"]>;
    onInput: EventName<WebComponentModule.DatePickerEventMap["input"]>;
    onOpenedChanged: EventName<WebComponentModule.DatePickerEventMap["opened-changed"]>;
    onValueChanged: EventName<WebComponentModule.DatePickerEventMap["value-changed"]>;
    onInvalidChanged: EventName<WebComponentModule.DatePickerEventMap["invalid-changed"]>;
}>;
export type DatePickerProps = WebComponentProps<WebComponentModule.DatePicker, DatePickerEventMap>;
export declare const DatePicker: import("../utils/createComponent.js").ThemedReactWebComponent<WebComponentModule.DatePicker, Readonly<{
    onValidated: EventName<WebComponentModule.DatePickerEventMap["validated"]>;
    onChange: EventName<WebComponentModule.DatePickerEventMap["change"]>;
    onInput: EventName<WebComponentModule.DatePickerEventMap["input"]>;
    onOpenedChanged: EventName<WebComponentModule.DatePickerEventMap["opened-changed"]>;
    onValueChanged: EventName<WebComponentModule.DatePickerEventMap["value-changed"]>;
    onInvalidChanged: EventName<WebComponentModule.DatePickerEventMap["invalid-changed"]>;
}>>;
export { WebComponentModule };
//# sourceMappingURL=DatePicker.d.ts.map