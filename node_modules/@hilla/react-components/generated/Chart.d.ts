import type { EventName } from "@lit-labs/react";
import * as WebComponentModule from "@vaadin/charts/vaadin-chart.js";
import { WebComponentProps } from "../utils/createComponent.js";
export type ChartEventMap = Readonly<{
    onChartAddSeries: EventName<WebComponentModule.ChartEventMap["chart-add-series"]>;
    onChartAfterExport: EventName<WebComponentModule.ChartEventMap["chart-after-export"]>;
    onChartAfterPrint: EventName<WebComponentModule.ChartEventMap["chart-after-print"]>;
    onChartBeforeExport: EventName<WebComponentModule.ChartEventMap["chart-before-export"]>;
    onChartBeforePrint: EventName<WebComponentModule.ChartEventMap["chart-before-print"]>;
    onChartClick: EventName<WebComponentModule.ChartEventMap["chart-click"]>;
    onChartDrilldown: EventName<WebComponentModule.ChartEventMap["chart-drilldown"]>;
    onChartDrillup: EventName<WebComponentModule.ChartEventMap["chart-drillup"]>;
    onChartDrillupall: EventName<WebComponentModule.ChartEventMap["chart-drillupall"]>;
    onChartLoad: EventName<WebComponentModule.ChartEventMap["chart-load"]>;
    onChartRedraw: EventName<WebComponentModule.ChartEventMap["chart-redraw"]>;
    onChartSelection: EventName<WebComponentModule.ChartEventMap["chart-selection"]>;
    onPointClick: EventName<WebComponentModule.ChartEventMap["point-click"]>;
    onPointLegendItemClick: EventName<WebComponentModule.ChartEventMap["point-legend-item-click"]>;
    onPointMouseOut: EventName<WebComponentModule.ChartEventMap["point-mouse-out"]>;
    onPointMouseOver: EventName<WebComponentModule.ChartEventMap["point-mouse-over"]>;
    onPointRemove: EventName<WebComponentModule.ChartEventMap["point-remove"]>;
    onPointSelect: EventName<WebComponentModule.ChartEventMap["point-select"]>;
    onPointUnselect: EventName<WebComponentModule.ChartEventMap["point-unselect"]>;
    onPointUpdate: EventName<WebComponentModule.ChartEventMap["point-update"]>;
    onSeriesAfterAnimate: EventName<WebComponentModule.ChartEventMap["series-after-animate"]>;
    onSeriesCheckboxClick: EventName<WebComponentModule.ChartEventMap["series-checkbox-click"]>;
    onSeriesClick: EventName<WebComponentModule.ChartEventMap["series-click"]>;
    onSeriesHide: EventName<WebComponentModule.ChartEventMap["series-hide"]>;
    onSeriesLegendItemClick: EventName<WebComponentModule.ChartEventMap["series-legend-item-click"]>;
    onSeriesMouseOut: EventName<WebComponentModule.ChartEventMap["series-mouse-out"]>;
    onSeriesMouseOver: EventName<WebComponentModule.ChartEventMap["series-mouse-over"]>;
    onSeriesShow: EventName<WebComponentModule.ChartEventMap["series-show"]>;
    onXaxesExtremesSet: EventName<WebComponentModule.ChartEventMap["xaxes-extremes-set"]>;
    onYaxesExtremesSet: EventName<WebComponentModule.ChartEventMap["yaxes-extremes-set"]>;
}>;
export type ChartProps = WebComponentProps<WebComponentModule.Chart, ChartEventMap>;
export declare const Chart: import("../utils/createComponent.js").ThemedReactWebComponent<WebComponentModule.Chart, Readonly<{
    onChartAddSeries: EventName<WebComponentModule.ChartEventMap["chart-add-series"]>;
    onChartAfterExport: EventName<WebComponentModule.ChartEventMap["chart-after-export"]>;
    onChartAfterPrint: EventName<WebComponentModule.ChartEventMap["chart-after-print"]>;
    onChartBeforeExport: EventName<WebComponentModule.ChartEventMap["chart-before-export"]>;
    onChartBeforePrint: EventName<WebComponentModule.ChartEventMap["chart-before-print"]>;
    onChartClick: EventName<WebComponentModule.ChartEventMap["chart-click"]>;
    onChartDrilldown: EventName<WebComponentModule.ChartEventMap["chart-drilldown"]>;
    onChartDrillup: EventName<WebComponentModule.ChartEventMap["chart-drillup"]>;
    onChartDrillupall: EventName<WebComponentModule.ChartEventMap["chart-drillupall"]>;
    onChartLoad: EventName<WebComponentModule.ChartEventMap["chart-load"]>;
    onChartRedraw: EventName<WebComponentModule.ChartEventMap["chart-redraw"]>;
    onChartSelection: EventName<WebComponentModule.ChartEventMap["chart-selection"]>;
    onPointClick: EventName<WebComponentModule.ChartEventMap["point-click"]>;
    onPointLegendItemClick: EventName<WebComponentModule.ChartEventMap["point-legend-item-click"]>;
    onPointMouseOut: EventName<WebComponentModule.ChartEventMap["point-mouse-out"]>;
    onPointMouseOver: EventName<WebComponentModule.ChartEventMap["point-mouse-over"]>;
    onPointRemove: EventName<WebComponentModule.ChartEventMap["point-remove"]>;
    onPointSelect: EventName<WebComponentModule.ChartEventMap["point-select"]>;
    onPointUnselect: EventName<WebComponentModule.ChartEventMap["point-unselect"]>;
    onPointUpdate: EventName<WebComponentModule.ChartEventMap["point-update"]>;
    onSeriesAfterAnimate: EventName<WebComponentModule.ChartEventMap["series-after-animate"]>;
    onSeriesCheckboxClick: EventName<WebComponentModule.ChartEventMap["series-checkbox-click"]>;
    onSeriesClick: EventName<WebComponentModule.ChartEventMap["series-click"]>;
    onSeriesHide: EventName<WebComponentModule.ChartEventMap["series-hide"]>;
    onSeriesLegendItemClick: EventName<WebComponentModule.ChartEventMap["series-legend-item-click"]>;
    onSeriesMouseOut: EventName<WebComponentModule.ChartEventMap["series-mouse-out"]>;
    onSeriesMouseOver: EventName<WebComponentModule.ChartEventMap["series-mouse-over"]>;
    onSeriesShow: EventName<WebComponentModule.ChartEventMap["series-show"]>;
    onXaxesExtremesSet: EventName<WebComponentModule.ChartEventMap["xaxes-extremes-set"]>;
    onYaxesExtremesSet: EventName<WebComponentModule.ChartEventMap["yaxes-extremes-set"]>;
}>>;
export { WebComponentModule };
//# sourceMappingURL=Chart.d.ts.map