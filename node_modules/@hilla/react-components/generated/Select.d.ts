import type { EventName } from "@lit-labs/react";
import * as WebComponentModule from "@vaadin/select/vaadin-select.js";
import { WebComponentProps } from "../utils/createComponent.js";
export type SelectEventMap = Readonly<{
    onValidated: EventName<WebComponentModule.SelectEventMap["validated"]>;
    onChange: EventName<WebComponentModule.SelectEventMap["change"]>;
    onOpenedChanged: EventName<WebComponentModule.SelectEventMap["opened-changed"]>;
    onValueChanged: EventName<WebComponentModule.SelectEventMap["value-changed"]>;
    onInvalidChanged: EventName<WebComponentModule.SelectEventMap["invalid-changed"]>;
}>;
export type SelectProps = WebComponentProps<WebComponentModule.Select, SelectEventMap>;
export declare const Select: import("../utils/createComponent.js").ThemedReactWebComponent<WebComponentModule.Select, Readonly<{
    onValidated: EventName<WebComponentModule.SelectEventMap["validated"]>;
    onChange: EventName<WebComponentModule.SelectEventMap["change"]>;
    onOpenedChanged: EventName<WebComponentModule.SelectEventMap["opened-changed"]>;
    onValueChanged: EventName<WebComponentModule.SelectEventMap["value-changed"]>;
    onInvalidChanged: EventName<WebComponentModule.SelectEventMap["invalid-changed"]>;
}>>;
export { WebComponentModule };
//# sourceMappingURL=Select.d.ts.map