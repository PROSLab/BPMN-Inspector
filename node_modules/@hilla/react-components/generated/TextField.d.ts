import type { EventName } from "@lit-labs/react";
import * as WebComponentModule from "@vaadin/text-field/vaadin-text-field.js";
import { WebComponentProps } from "../utils/createComponent.js";
export type TextFieldEventMap = Readonly<{
    onValidated: EventName<WebComponentModule.TextFieldEventMap["validated"]>;
    onChange: EventName<WebComponentModule.TextFieldEventMap["change"]>;
    onInput: EventName<WebComponentModule.TextFieldEventMap["input"]>;
    onValueChanged: EventName<WebComponentModule.TextFieldEventMap["value-changed"]>;
    onInvalidChanged: EventName<WebComponentModule.TextFieldEventMap["invalid-changed"]>;
}>;
export type TextFieldProps = WebComponentProps<WebComponentModule.TextField, TextFieldEventMap>;
export declare const TextField: import("../utils/createComponent.js").ThemedReactWebComponent<WebComponentModule.TextField, Readonly<{
    onValidated: EventName<WebComponentModule.TextFieldEventMap["validated"]>;
    onChange: EventName<WebComponentModule.TextFieldEventMap["change"]>;
    onInput: EventName<WebComponentModule.TextFieldEventMap["input"]>;
    onValueChanged: EventName<WebComponentModule.TextFieldEventMap["value-changed"]>;
    onInvalidChanged: EventName<WebComponentModule.TextFieldEventMap["invalid-changed"]>;
}>>;
export { WebComponentModule };
//# sourceMappingURL=TextField.d.ts.map