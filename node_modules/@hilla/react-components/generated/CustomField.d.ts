import type { EventName } from "@lit-labs/react";
import * as WebComponentModule from "@vaadin/custom-field/vaadin-custom-field.js";
import { WebComponentProps } from "../utils/createComponent.js";
export type CustomFieldEventMap = Readonly<{
    onValidated: EventName<WebComponentModule.CustomFieldEventMap["validated"]>;
    onChange: EventName<WebComponentModule.CustomFieldEventMap["change"]>;
    onValueChanged: EventName<WebComponentModule.CustomFieldEventMap["value-changed"]>;
    onInvalidChanged: EventName<WebComponentModule.CustomFieldEventMap["invalid-changed"]>;
}>;
export type CustomFieldProps = WebComponentProps<WebComponentModule.CustomField, CustomFieldEventMap>;
export declare const CustomField: import("../utils/createComponent.js").ThemedReactWebComponent<WebComponentModule.CustomField, Readonly<{
    onValidated: EventName<WebComponentModule.CustomFieldEventMap["validated"]>;
    onChange: EventName<WebComponentModule.CustomFieldEventMap["change"]>;
    onValueChanged: EventName<WebComponentModule.CustomFieldEventMap["value-changed"]>;
    onInvalidChanged: EventName<WebComponentModule.CustomFieldEventMap["invalid-changed"]>;
}>>;
export { WebComponentModule };
//# sourceMappingURL=CustomField.d.ts.map