import type { EventName } from "@lit-labs/react";
import * as WebComponentModule from "@vaadin/text-area/vaadin-text-area.js";
import { WebComponentProps } from "../utils/createComponent.js";
export type TextAreaEventMap = Readonly<{
    onValidated: EventName<WebComponentModule.TextAreaEventMap["validated"]>;
    onChange: EventName<WebComponentModule.TextAreaEventMap["change"]>;
    onInput: EventName<WebComponentModule.TextAreaEventMap["input"]>;
    onInvalidChanged: EventName<WebComponentModule.TextAreaEventMap["invalid-changed"]>;
    onValueChanged: EventName<WebComponentModule.TextAreaEventMap["value-changed"]>;
}>;
export type TextAreaProps = WebComponentProps<WebComponentModule.TextArea, TextAreaEventMap>;
export declare const TextArea: import("../utils/createComponent.js").ThemedReactWebComponent<WebComponentModule.TextArea, Readonly<{
    onValidated: EventName<WebComponentModule.TextAreaEventMap["validated"]>;
    onChange: EventName<WebComponentModule.TextAreaEventMap["change"]>;
    onInput: EventName<WebComponentModule.TextAreaEventMap["input"]>;
    onInvalidChanged: EventName<WebComponentModule.TextAreaEventMap["invalid-changed"]>;
    onValueChanged: EventName<WebComponentModule.TextAreaEventMap["value-changed"]>;
}>>;
export { WebComponentModule };
//# sourceMappingURL=TextArea.d.ts.map