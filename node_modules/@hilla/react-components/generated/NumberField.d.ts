import type { EventName } from "@lit-labs/react";
import * as WebComponentModule from "@vaadin/number-field/vaadin-number-field.js";
import { WebComponentProps } from "../utils/createComponent.js";
export type NumberFieldEventMap = Readonly<{
    onValidated: EventName<WebComponentModule.NumberFieldEventMap["validated"]>;
    onChange: EventName<WebComponentModule.NumberFieldEventMap["change"]>;
    onInput: EventName<WebComponentModule.NumberFieldEventMap["input"]>;
    onInvalidChanged: EventName<WebComponentModule.NumberFieldEventMap["invalid-changed"]>;
    onValueChanged: EventName<WebComponentModule.NumberFieldEventMap["value-changed"]>;
}>;
export type NumberFieldProps = WebComponentProps<WebComponentModule.NumberField, NumberFieldEventMap>;
export declare const NumberField: import("../utils/createComponent.js").ThemedReactWebComponent<WebComponentModule.NumberField, Readonly<{
    onValidated: EventName<WebComponentModule.NumberFieldEventMap["validated"]>;
    onChange: EventName<WebComponentModule.NumberFieldEventMap["change"]>;
    onInput: EventName<WebComponentModule.NumberFieldEventMap["input"]>;
    onInvalidChanged: EventName<WebComponentModule.NumberFieldEventMap["invalid-changed"]>;
    onValueChanged: EventName<WebComponentModule.NumberFieldEventMap["value-changed"]>;
}>>;
export { WebComponentModule };
//# sourceMappingURL=NumberField.d.ts.map