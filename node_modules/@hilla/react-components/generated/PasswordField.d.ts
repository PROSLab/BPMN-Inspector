import type { EventName } from "@lit-labs/react";
import * as WebComponentModule from "@vaadin/password-field/vaadin-password-field.js";
import { WebComponentProps } from "../utils/createComponent.js";
export type PasswordFieldEventMap = Readonly<{
    onValidated: EventName<WebComponentModule.PasswordFieldEventMap["validated"]>;
    onChange: EventName<WebComponentModule.PasswordFieldEventMap["change"]>;
    onInput: EventName<WebComponentModule.PasswordFieldEventMap["input"]>;
    onValueChanged: EventName<WebComponentModule.PasswordFieldEventMap["value-changed"]>;
    onInvalidChanged: EventName<WebComponentModule.PasswordFieldEventMap["invalid-changed"]>;
}>;
export type PasswordFieldProps = WebComponentProps<WebComponentModule.PasswordField, PasswordFieldEventMap>;
export declare const PasswordField: import("../utils/createComponent.js").ThemedReactWebComponent<WebComponentModule.PasswordField, Readonly<{
    onValidated: EventName<WebComponentModule.PasswordFieldEventMap["validated"]>;
    onChange: EventName<WebComponentModule.PasswordFieldEventMap["change"]>;
    onInput: EventName<WebComponentModule.PasswordFieldEventMap["input"]>;
    onValueChanged: EventName<WebComponentModule.PasswordFieldEventMap["value-changed"]>;
    onInvalidChanged: EventName<WebComponentModule.PasswordFieldEventMap["invalid-changed"]>;
}>>;
export { WebComponentModule };
//# sourceMappingURL=PasswordField.d.ts.map