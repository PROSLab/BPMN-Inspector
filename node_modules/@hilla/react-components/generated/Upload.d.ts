import type { EventName } from "@lit-labs/react";
import * as WebComponentModule from "@vaadin/upload/vaadin-upload.js";
import { WebComponentProps } from "../utils/createComponent.js";
export type UploadEventMap = Readonly<{
    onFileReject: EventName<WebComponentModule.UploadEventMap["file-reject"]>;
    onUploadAbort: EventName<WebComponentModule.UploadEventMap["upload-abort"]>;
    onUploadBefore: EventName<WebComponentModule.UploadEventMap["upload-before"]>;
    onUploadError: EventName<WebComponentModule.UploadEventMap["upload-error"]>;
    onUploadProgress: EventName<WebComponentModule.UploadEventMap["upload-progress"]>;
    onUploadRequest: EventName<WebComponentModule.UploadEventMap["upload-request"]>;
    onUploadResponse: EventName<WebComponentModule.UploadEventMap["upload-response"]>;
    onUploadRetry: EventName<WebComponentModule.UploadEventMap["upload-retry"]>;
    onUploadStart: EventName<WebComponentModule.UploadEventMap["upload-start"]>;
    onUploadSuccess: EventName<WebComponentModule.UploadEventMap["upload-success"]>;
    onFilesChanged: EventName<WebComponentModule.UploadEventMap["files-changed"]>;
    onMaxFilesReachedChanged: EventName<WebComponentModule.UploadEventMap["max-files-reached-changed"]>;
}>;
export type UploadProps = WebComponentProps<WebComponentModule.Upload, UploadEventMap>;
export declare const Upload: import("../utils/createComponent.js").ThemedReactWebComponent<WebComponentModule.Upload, Readonly<{
    onFileReject: EventName<WebComponentModule.UploadEventMap["file-reject"]>;
    onUploadAbort: EventName<WebComponentModule.UploadEventMap["upload-abort"]>;
    onUploadBefore: EventName<WebComponentModule.UploadEventMap["upload-before"]>;
    onUploadError: EventName<WebComponentModule.UploadEventMap["upload-error"]>;
    onUploadProgress: EventName<WebComponentModule.UploadEventMap["upload-progress"]>;
    onUploadRequest: EventName<WebComponentModule.UploadEventMap["upload-request"]>;
    onUploadResponse: EventName<WebComponentModule.UploadEventMap["upload-response"]>;
    onUploadRetry: EventName<WebComponentModule.UploadEventMap["upload-retry"]>;
    onUploadStart: EventName<WebComponentModule.UploadEventMap["upload-start"]>;
    onUploadSuccess: EventName<WebComponentModule.UploadEventMap["upload-success"]>;
    onFilesChanged: EventName<WebComponentModule.UploadEventMap["files-changed"]>;
    onMaxFilesReachedChanged: EventName<WebComponentModule.UploadEventMap["max-files-reached-changed"]>;
}>>;
export { WebComponentModule };
//# sourceMappingURL=Upload.d.ts.map