{"version":3,"file":"Crud.js","sourceRoot":"","sources":["../src/generated/Crud.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,kBAAkB,MAAM,6BAA6B,CAAC;AAClE,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,eAAe,EAAqB,MAAM,6BAA6B,CAAC;AAYjF,MAAM,MAAM,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,cAAc,EAAE,eAAe,EAAE,mBAAmB,EAAE,qBAAqB,EAAE,qBAAqB,EAAE,uBAAuB,EAAE,aAAa,EAAE,cAAc,EAA2B,CAAC;AAE7R,MAAM,CAAC,MAAM,IAAI,GAAG,eAAe,CAAC;IAChC,YAAY,EAAE,kBAAkB,CAAC,IAAI;IACrC,MAAM;IACN,KAAK,EAAE,KAAK;IACZ,OAAO,EAAE,aAAa;CACzB,CAE8B,CAAC;AAChC,OAAO,EAAE,kBAAkB,EAAE,CAAC","sourcesContent":["import type { EventName } from \"@lit-labs/react\";\nimport * as WebComponentModule from \"@vaadin/crud/vaadin-crud.js\";\nimport * as React from \"react\";\nimport { createComponent, WebComponentProps } from \"../utils/createComponent.js\";\nexport type CrudEventMap<T1> = Readonly<{\n    onCancel: EventName<WebComponentModule.CrudEventMap<T1>[\"cancel\"]>;\n    onDelete: EventName<WebComponentModule.CrudEventMap<T1>[\"delete\"]>;\n    onEdit: EventName<WebComponentModule.CrudEventMap<T1>[\"edit\"]>;\n    onNew: EventName<WebComponentModule.CrudEventMap<T1>[\"new\"]>;\n    onSave: EventName<WebComponentModule.CrudEventMap<T1>[\"save\"]>;\n    onItemsChanged: EventName<WebComponentModule.CrudEventMap<T1>[\"items-changed\"]>;\n    onEditedItemChanged: EventName<WebComponentModule.CrudEventMap<T1>[\"edited-item-changed\"]>;\n    onEditorOpenedChanged: EventName<WebComponentModule.CrudEventMap<T1>[\"editor-opened-changed\"]>;\n    onSizeChanged: EventName<WebComponentModule.CrudEventMap<T1>[\"size-changed\"]>;\n}>;\nconst events = { onCancel: \"cancel\", onDelete: \"delete\", onEdit: \"edit\", onNew: \"new\", onSave: \"save\", onItemsChanged: \"items-changed\", onEditedItemChanged: \"edited-item-changed\", onEditorOpenedChanged: \"editor-opened-changed\", onSizeChanged: \"size-changed\" } as CrudEventMap<unknown>;\nexport type CrudProps<T1> = WebComponentProps<WebComponentModule.Crud<T1>, CrudEventMap<T1>>;\nexport const Crud = createComponent({\n    elementClass: WebComponentModule.Crud,\n    events,\n    react: React,\n    tagName: \"vaadin-crud\"\n}) as <T1>(props: CrudProps<T1> & {\n    ref?: React.ForwardedRef<WebComponentModule.Crud<T1>>;\n}) => React.ReactElement | null;\nexport { WebComponentModule };\n"]}