{"version":3,"file":"GridSelectionColumn.js","sourceRoot":"","sources":["../src/generated/GridSelectionColumn.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,kBAAkB,MAAM,8CAA8C,CAAC;AACnF,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,eAAe,EAAqB,MAAM,6BAA6B,CAAC;AAIjF,MAAM,MAAM,GAAG,EAAE,kBAAkB,EAAE,oBAAoB,EAAiC,CAAC;AAE3F,MAAM,CAAC,MAAM,mBAAmB,GAAG,eAAe,CAAC;IAC/C,YAAY,EAAE,kBAAkB,CAAC,mBAAmB;IACpD,MAAM;IACN,KAAK,EAAE,KAAK;IACZ,OAAO,EAAE,8BAA8B;CAC1C,CAE8B,CAAC;AAChC,OAAO,EAAE,kBAAkB,EAAE,CAAC","sourcesContent":["import type { EventName } from \"@lit-labs/react\";\nimport * as WebComponentModule from \"@vaadin/grid/vaadin-grid-selection-column.js\";\nimport * as React from \"react\";\nimport { createComponent, WebComponentProps } from \"../utils/createComponent.js\";\nexport type GridSelectionColumnEventMap = Readonly<{\n    onSelectAllChanged: EventName<WebComponentModule.GridSelectionColumnEventMap[\"select-all-changed\"]>;\n}>;\nconst events = { onSelectAllChanged: \"select-all-changed\" } as GridSelectionColumnEventMap;\nexport type GridSelectionColumnProps<T1> = WebComponentProps<WebComponentModule.GridSelectionColumn<T1>, GridSelectionColumnEventMap>;\nexport const GridSelectionColumn = createComponent({\n    elementClass: WebComponentModule.GridSelectionColumn,\n    events,\n    react: React,\n    tagName: \"vaadin-grid-selection-column\"\n}) as <T1>(props: GridSelectionColumnProps<T1> & {\n    ref?: React.ForwardedRef<WebComponentModule.GridSelectionColumn<T1>>;\n}) => React.ReactElement | null;\nexport { WebComponentModule };\n"]}