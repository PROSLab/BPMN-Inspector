import type { EventName } from "@lit-labs/react";
import * as WebComponentModule from "@vaadin/time-picker/vaadin-time-picker.js";
import { WebComponentProps } from "../utils/createComponent.js";
export type TimePickerEventMap = Readonly<{
    onValidated: EventName<WebComponentModule.TimePickerEventMap["validated"]>;
    onChange: EventName<WebComponentModule.TimePickerEventMap["change"]>;
    onInput: EventName<WebComponentModule.TimePickerEventMap["input"]>;
    onValueChanged: EventName<WebComponentModule.TimePickerEventMap["value-changed"]>;
    onOpenedChanged: EventName<WebComponentModule.TimePickerEventMap["opened-changed"]>;
    onInvalidChanged: EventName<WebComponentModule.TimePickerEventMap["invalid-changed"]>;
}>;
export type TimePickerProps = WebComponentProps<WebComponentModule.TimePicker, TimePickerEventMap>;
export declare const TimePicker: import("../utils/createComponent.js").ThemedReactWebComponent<WebComponentModule.TimePicker, Readonly<{
    onValidated: EventName<WebComponentModule.TimePickerEventMap["validated"]>;
    onChange: EventName<WebComponentModule.TimePickerEventMap["change"]>;
    onInput: EventName<WebComponentModule.TimePickerEventMap["input"]>;
    onValueChanged: EventName<WebComponentModule.TimePickerEventMap["value-changed"]>;
    onOpenedChanged: EventName<WebComponentModule.TimePickerEventMap["opened-changed"]>;
    onInvalidChanged: EventName<WebComponentModule.TimePickerEventMap["invalid-changed"]>;
}>>;
export { WebComponentModule };
//# sourceMappingURL=TimePicker.d.ts.map