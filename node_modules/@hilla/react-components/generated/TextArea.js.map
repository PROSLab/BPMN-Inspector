{"version":3,"file":"TextArea.js","sourceRoot":"","sources":["../src/generated/TextArea.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,kBAAkB,MAAM,uCAAuC,CAAC;AAC5E,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAE,eAAe,EAAqB,MAAM,6BAA6B,CAAC;AAQjF,MAAM,MAAM,GAAG,EAAE,WAAW,EAAE,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,cAAc,EAAE,eAAe,EAAsB,CAAC;AAE5K,MAAM,CAAC,MAAM,QAAQ,GAAG,eAAe,CAAC;IACpC,YAAY,EAAE,kBAAkB,CAAC,QAAQ;IACzC,MAAM;IACN,KAAK,EAAE,KAAK;IACZ,OAAO,EAAE,kBAAkB;CAC9B,CAAC,CAAC;AACH,OAAO,EAAE,kBAAkB,EAAE,CAAC","sourcesContent":["import type { EventName } from \"@lit-labs/react\";\nimport * as WebComponentModule from \"@vaadin/text-area/vaadin-text-area.js\";\nimport * as React from \"react\";\nimport { createComponent, WebComponentProps } from \"../utils/createComponent.js\";\nexport type TextAreaEventMap = Readonly<{\n    onValidated: EventName<WebComponentModule.TextAreaEventMap[\"validated\"]>;\n    onChange: EventName<WebComponentModule.TextAreaEventMap[\"change\"]>;\n    onInput: EventName<WebComponentModule.TextAreaEventMap[\"input\"]>;\n    onInvalidChanged: EventName<WebComponentModule.TextAreaEventMap[\"invalid-changed\"]>;\n    onValueChanged: EventName<WebComponentModule.TextAreaEventMap[\"value-changed\"]>;\n}>;\nconst events = { onValidated: \"validated\", onChange: \"change\", onInput: \"input\", onInvalidChanged: \"invalid-changed\", onValueChanged: \"value-changed\" } as TextAreaEventMap;\nexport type TextAreaProps = WebComponentProps<WebComponentModule.TextArea, TextAreaEventMap>;\nexport const TextArea = createComponent({\n    elementClass: WebComponentModule.TextArea,\n    events,\n    react: React,\n    tagName: \"vaadin-text-area\"\n});\nexport { WebComponentModule };\n"]}