{"version":3,"file":"Notification.js","sourceRoot":"","sources":["src/Notification.tsx"],"names":[],"mappings":";AAAA,OAAO,EAGL,UAAU,GAMX,MAAM,OAAO,CAAC;AACf,OAAO,EACL,YAAY,IAAI,aAAa,EAE7B,kBAAkB,GACnB,MAAM,6BAA6B,CAAC;AACrC,OAAO,EAAE,2BAA2B,EAAE,MAAM,4CAA4C,CAAC;AAGzF,cAAc,6BAA6B,CAAC;AAU5C,SAAS,YAAY,CACnB,EAAE,QAAQ,EAAE,GAAG,KAAK,EAAqB,EACzC,GAAkD;IAElD,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,GAAG,2BAA2B,CAAC,KAAK,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAElF,OAAO,CACL,KAAC,aAAa,OAAK,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,QAAQ,EAAE,QAAQ,YACnD,OAAO,GACM,CACjB,CAAC;AACJ,CAAC;AAQD,MAAM,qBAAqB,GAAG,UAAU,CAAC,YAAY,CAAyB,CAAC;AAC/E,qBAAqB,CAAC,IAAI,GAAG,kBAAkB,CAAC,YAAY,CAAC,IAAI,CAAC;AAElE,OAAO,EAAE,qBAAqB,IAAI,YAAY,EAAE,kBAAkB,EAAE,CAAC","sourcesContent":["import {\n  type ComponentType,\n  type ForwardedRef,\n  forwardRef,\n  type ForwardRefExoticComponent,\n  type PropsWithoutRef,\n  type ReactElement,\n  type ReactNode,\n  type RefAttributes,\n} from 'react';\nimport {\n  Notification as _Notification,\n  type NotificationProps as _NotificationProps,\n  WebComponentModule,\n} from './generated/Notification.js';\nimport { useSimpleOrChildrenRenderer } from './renderers/useSimpleOrChildrenRenderer.js';\nimport type { ReactSimpleRendererProps } from './renderers/useSimpleRenderer.js';\n\nexport * from './generated/Notification.js';\n\nexport type NotificationReactRendererProps = ReactSimpleRendererProps<WebComponentModule.Notification>;\n\nexport type NotificationProps = Omit<_NotificationProps, 'children' | 'renderer'> &\n  Readonly<{\n    children?: ReactNode | ComponentType<NotificationReactRendererProps>;\n    renderer?: ComponentType<NotificationReactRendererProps>;\n  }>;\n\nfunction Notification(\n  { children, ...props }: NotificationProps,\n  ref: ForwardedRef<WebComponentModule.Notification>,\n): ReactElement | null {\n  const [portals, renderer] = useSimpleOrChildrenRenderer(props.renderer, children);\n\n  return (\n    <_Notification {...props} ref={ref} renderer={renderer}>\n      {portals}\n    </_Notification>\n  );\n}\n\nexport type NotificationFunction = ForwardRefExoticComponent<\n  PropsWithoutRef<NotificationProps> & RefAttributes<WebComponentModule.Notification>\n> & {\n  show(contents: string, options?: WebComponentModule.ShowOptions): WebComponentModule.Notification;\n};\n\nconst ForwardedNotification = forwardRef(Notification) as NotificationFunction;\nForwardedNotification.show = WebComponentModule.Notification.show;\n\nexport { ForwardedNotification as Notification, WebComponentModule };\n"]}