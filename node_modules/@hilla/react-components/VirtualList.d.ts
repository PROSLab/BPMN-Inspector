import type { VirtualListDefaultItem } from '@vaadin/virtual-list/src/vaadin-virtual-list.js';
import { type ComponentType, type ForwardedRef, type ReactElement } from 'react';
import { type VirtualListProps as _VirtualListProps, WebComponentModule } from './generated/VirtualList.js';
import { type ReactModelRendererProps } from './renderers/useModelRenderer.js';
export * from './generated/VirtualList.js';
export type VirtualListReactRendererProps<TItem> = ReactModelRendererProps<TItem, WebComponentModule.VirtualListItemModel<TItem>, WebComponentModule.VirtualList<TItem>>;
export type VirtualListProps<TItem> = Omit<_VirtualListProps<TItem>, 'children' | 'renderer'> & Readonly<{
    children?: ComponentType<VirtualListReactRendererProps<TItem>> | null;
    renderer?: ComponentType<VirtualListReactRendererProps<TItem>> | null;
}>;
declare function VirtualList<TItem = VirtualListDefaultItem>(props: VirtualListProps<TItem>, ref: ForwardedRef<WebComponentModule.VirtualList<TItem>>): ReactElement | null;
declare const ForwardedVirtualList: <TItem = any>(props: Omit<import("./utils/createComponent.js").ThemedWebComponentProps<WebComponentModule.VirtualList<TItem>, Readonly<{}>>, "children" | "renderer"> & Readonly<{
    children?: ComponentType<Readonly<{
        item: TItem;
        model: WebComponentModule.VirtualListItemModel<TItem>;
        original: WebComponentModule.VirtualList<TItem>;
    }>> | null | undefined;
    renderer?: ComponentType<Readonly<{
        item: TItem;
        model: WebComponentModule.VirtualListItemModel<TItem>;
        original: WebComponentModule.VirtualList<TItem>;
    }>> | null | undefined;
}> & {
    ref?: ForwardedRef<WebComponentModule.VirtualList<TItem>> | undefined;
}) => ReactElement | null;
export { ForwardedVirtualList as VirtualList, WebComponentModule };
//# sourceMappingURL=VirtualList.d.ts.map