{"version":3,"file":"EntityProcessor.js","sourceRoot":"","sources":["src/EntityProcessor.ts"],"names":[],"mappings":"AAEA,OAAO,EACL,4BAA4B,EAC5B,iCAAiC,EACjC,eAAe,EACf,gBAAgB,EAChB,aAAa,EACb,YAAY,EACZ,gBAAgB,EAChB,cAAc,EACd,iBAAiB,GAElB,MAAM,4CAA4C,CAAC;AACpD,OAAO,EACL,uCAAuC,EACvC,0BAA0B,GAC3B,MAAM,2CAA2C,CAAC;AACnD,OAAO,gBAAgB,MAAM,uDAAuD,CAAC;AACrF,OAAO,iBAAiB,MAAM,qEAAqE,CAAC;AACpG,OAAO,WAAW,MAAM,+DAA+D,CAAC;AACxF,OAAO,EAAE,OAAO,EAAE,MAAM,YAAY,CAAC;AAErC,OAAO,EAAmB,MAAM,YAAY,CAAC;AAC7C,OAAO,mBAAmB,MAAM,0BAA0B,CAAC;AAE3D,MAAM,OAAO,eAAe;IACjB,UAAU,CAAS;IACnB,aAAa,CAAC;IACd,mBAAmB,CAAS;IAC5B,KAAK,CAAS;IACd,MAAM,CAAS;IACf,KAAK,CAAS;IACd,YAAY,GAAG,IAAI,WAAW,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAE7D,YAAmB,IAAY,EAAE,SAAiB,EAAE,KAAa;QAC/D,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;QAChC,IAAI,CAAC,KAAK,GAAG,0BAA0B,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,KAAK,GAAG,uCAAuC,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,aAAa,GAAG,IAAI,iBAAiB,CAAC,IAAI,WAAW,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC;IACnG,CAAC;IAED,IAAI,GAAG;QACL,MAAM,EAAE,GAAG,EAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAEnD,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAE3C,OAAO,EAAE,CAAC;IACZ,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,sBAAsB,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC;QAE7D,MAAM,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;YAC/C,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC;YACpC,CAAC,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAEhD,MAAM,UAAU,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;QAEpD,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;QAEhD,OAAO,gBAAgB,CACrB,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,GAAG,UAAU,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EACzD,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,CAAC,CACjD,CAAC;IACJ,CAAC;IAED,aAAa,CAAC,MAAc;QAC1B,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAE/B,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;YAC3B,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,gCAAgC,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;YAClF,OAAO,SAAS,CAAC;SAClB;QAED,IAAI,aAAa,CAAC,MAAM,CAAC,EAAE;YACzB,MAAM,CAAC,IAAI,CAAC,iCAAiC,IAAI,CAAC,mBAAmB,GAAG,CAAC,CAAC;SAC3E;QAED,OAAO,EAAE,CAAC,OAAO,CAAC,0BAA0B,CAC1C,SAAS,EACT,SAAS,EACT,IAAI,CAAC,GAAG,EACR,SAAS,EACT,SAAS,EACT,IAAI,CAAC,oBAAoB,CAAC,MAA8B,CAAC,CAC1D,CAAC;IACJ,CAAC;IAED,YAAY,CAAC,EAAE,IAAI,EAAE,OAAO,EAAc;QACxC,OAAO,EAAE,CAAC,OAAO,CAAC,qBAAqB,CACrC,SAAS,EACT,SAAS,EACT,IAAI,CAAC,GAAG,EACR,OAAO,CAAC,GAAG,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,EAAE,CAAC,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,EAAE,CAAC,OAAO,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,EAAE,CAC3G,CAAC;IACJ,CAAC;IAED,qBAAqB,CAAC,MAAc;QAClC,MAAM,EAAE,MAAM,EAAE,GAAG,IAAI,CAAC,MAAM,CAAC;QAE/B,IAAI,gBAAgB,CAAC,MAAM,CAAC,EAAE;YAC5B,MAAM,UAAU,GAAG,eAAe,CAAC,MAAM,CAAC,CAAC;YAE3C,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;gBACzB,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,eAAe,IAAI,CAAC,mBAAmB,8BAA8B,CAAC,CAAC;gBAC5F,OAAO,SAAS,CAAC;aAClB;YAED,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,UAAU,CAAC;YAEnC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE;gBAC9B,MAAM,CAAC,KAAK,CAAC,MAAM,EAAE,gDAAgD,CAAC,CAAC;gBACvE,OAAO,SAAS,CAAC;aAClB;YAED,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAC9C,MAAM,UAAU,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC;YAEpD,OAAO,CACL,WAAW;gBACX,EAAE,CAAC,OAAO,CAAC,0BAA0B,CACnC,WAAW,EACX,SAAS,EACT,WAAW,CAAC,SAAS,EACrB,WAAW,CAAC,IAAI,EAChB,SAAS,EACT;oBACE,EAAE,CAAC,OAAO,CAAC,oBAAoB,CAAC,EAAE,CAAC,UAAU,CAAC,cAAc,EAAE;wBAC5D,EAAE,CAAC,OAAO,CAAC,iCAAiC,CAAC,UAAU,EAAE,SAAS,CAAC;qBACpE,CAAC;iBACH,EACD,WAAW,CAAC,OAAO,CACpB,CACF,CAAC;SACH;QAED,OAAO,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAED,mBAAmB,CAAC,MAAuB;QACzC,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC;QAE9C,MAAM,SAAS,GAAG,iCAAiC,CAAC,MAAM,CAAC,CAAC;QAC5D,MAAM,IAAI,GAAG,KAAK,CAAC,kBAAkB,CAAC,4BAA4B,CAAC,MAAM,CAAC,CAAC,CAAC;QAE5E,OAAO,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,oBAAoB,CAAC,EAAE,UAAU,EAAwB;QACvD,OAAO,UAAU;YACf,CAAC,CAAC,MAAM,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,EAAE,MAAM,CAAC,EAAE,EAAE;gBAChD,MAAM,CAAC,IAAI,CAAC,GAAG,IAAI,mBAAmB,CAAC,MAAM,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,OAAO,EAAE,CAAC;gBAE7E,OAAO,EAAE,CAAC,OAAO,CAAC,uBAAuB,CACvC,SAAS,EACT,IAAI,EACJ,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,SAAS,EAC1F,IAAI,CACL,CAAC;YACJ,CAAC,CAAC;YACJ,CAAC,CAAC,EAAE,CAAC;IACT,CAAC;CACF","sourcesContent":["import type Plugin from '@hilla/generator-typescript-core/Plugin.js';\nimport type { EnumSchema, ReferenceSchema, Schema } from '@hilla/generator-typescript-core/Schema.js';\nimport {\n  convertReferenceSchemaToPath,\n  convertReferenceSchemaToSpecifier,\n  decomposeSchema,\n  isComposedSchema,\n  isEmptyObject,\n  isEnumSchema,\n  isNullableSchema,\n  isObjectSchema,\n  isReferenceSchema,\n  NonEmptyObjectSchema,\n} from '@hilla/generator-typescript-core/Schema.js';\nimport {\n  convertFullyQualifiedNameToRelativePath,\n  simplifyFullyQualifiedName,\n} from '@hilla/generator-typescript-core/utils.js';\nimport createSourceFile from '@hilla/generator-typescript-utils/createSourceFile.js';\nimport DependencyManager from '@hilla/generator-typescript-utils/dependencies/DependencyManager.js';\nimport PathManager from '@hilla/generator-typescript-utils/dependencies/PathManager.js';\nimport { dirname } from 'path/posix';\nimport type { Identifier, InterfaceDeclaration, SourceFile, Statement } from 'typescript';\nimport ts, { TypeElement } from 'typescript';\nimport TypeSchemaProcessor from './TypeSchemaProcessor.js';\n\nexport class EntityProcessor {\n  readonly #component: Schema;\n  readonly #dependencies;\n  readonly #fullyQualifiedName: string;\n  readonly #name: string;\n  readonly #owner: Plugin;\n  readonly #path: string;\n  readonly #sourcePaths = new PathManager({ extension: 'ts' });\n\n  public constructor(name: string, component: Schema, owner: Plugin) {\n    this.#component = component;\n    this.#owner = owner;\n    this.#fullyQualifiedName = name;\n    this.#name = simplifyFullyQualifiedName(name);\n    this.#path = convertFullyQualifiedNameToRelativePath(name);\n    this.#dependencies = new DependencyManager(new PathManager({ relativeTo: dirname(this.#path) }));\n  }\n\n  get #id(): Identifier {\n    const id = ts.factory.createIdentifier(this.#name);\n\n    this.#dependencies.exports.default.set(id);\n\n    return id;\n  }\n\n  public process(): SourceFile {\n    this.#owner.logger.debug(`Processing entity: ${this.#name}`);\n\n    const declaration = isEnumSchema(this.#component)\n      ? this.#processEnum(this.#component)\n      : this.#processExtendedClass(this.#component);\n\n    const statements = declaration ? [declaration] : [];\n\n    const { imports, exports } = this.#dependencies;\n\n    return createSourceFile(\n      [...imports.toCode(), ...statements, ...exports.toCode()],\n      this.#sourcePaths.createRelativePath(this.#path),\n    );\n  }\n\n  #processClass(schema: Schema): InterfaceDeclaration | undefined {\n    const { logger } = this.#owner;\n\n    if (!isObjectSchema(schema)) {\n      logger.error(schema, `Component is not an object: '${this.#fullyQualifiedName}'`);\n      return undefined;\n    }\n\n    if (isEmptyObject(schema)) {\n      logger.warn(`Component has no properties:' ${this.#fullyQualifiedName}'`);\n    }\n\n    return ts.factory.createInterfaceDeclaration(\n      undefined,\n      undefined,\n      this.#id,\n      undefined,\n      undefined,\n      this.#processTypeElements(schema as NonEmptyObjectSchema),\n    );\n  }\n\n  #processEnum({ enum: members }: EnumSchema): Statement {\n    return ts.factory.createEnumDeclaration(\n      undefined,\n      undefined,\n      this.#id,\n      members.map((member) => ts.factory.createEnumMember(member, ts.factory.createStringLiteral(member))) ?? [],\n    );\n  }\n\n  #processExtendedClass(schema: Schema): Statement | undefined {\n    const { logger } = this.#owner;\n\n    if (isComposedSchema(schema)) {\n      const decomposed = decomposeSchema(schema);\n\n      if (decomposed.length > 2) {\n        logger.error(schema, `Schema for '${this.#fullyQualifiedName}' class component is broken.`);\n        return undefined;\n      }\n\n      const [parent, child] = decomposed;\n\n      if (!isReferenceSchema(parent)) {\n        logger.error(parent, 'Only reference schema allowed for parent class');\n        return undefined;\n      }\n\n      const declaration = this.#processClass(child);\n      const identifier = this.#processParentClass(parent);\n\n      return (\n        declaration &&\n        ts.factory.updateInterfaceDeclaration(\n          declaration,\n          undefined,\n          declaration.modifiers,\n          declaration.name,\n          undefined,\n          [\n            ts.factory.createHeritageClause(ts.SyntaxKind.ExtendsKeyword, [\n              ts.factory.createExpressionWithTypeArguments(identifier, undefined),\n            ]),\n          ],\n          declaration.members,\n        )\n      );\n    }\n\n    return this.#processClass(schema);\n  }\n\n  #processParentClass(schema: ReferenceSchema): Identifier {\n    const { imports, paths } = this.#dependencies;\n\n    const specifier = convertReferenceSchemaToSpecifier(schema);\n    const path = paths.createRelativePath(convertReferenceSchemaToPath(schema));\n\n    return imports.default.add(path, specifier, true);\n  }\n\n  #processTypeElements({ properties }: NonEmptyObjectSchema): readonly TypeElement[] {\n    return properties\n      ? Object.entries(properties).map(([name, schema]) => {\n          const [type] = new TypeSchemaProcessor(schema, this.#dependencies).process();\n\n          return ts.factory.createPropertySignature(\n            undefined,\n            name,\n            isNullableSchema(schema) ? ts.factory.createToken(ts.SyntaxKind.QuestionToken) : undefined,\n            type,\n          );\n        })\n      : [];\n  }\n}\n"]}