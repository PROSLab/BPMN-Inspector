{"version":3,"file":"EndpointMethodOperationProcessor.js","sourceRoot":"","sources":["src/EndpointMethodOperationProcessor.ts"],"names":[],"mappings":"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","sourcesContent":["import type Plugin from '@hilla/generator-typescript-core/Plugin.js';\nimport ClientPlugin from '@hilla/generator-typescript-plugin-client';\nimport type DependencyManager from '@hilla/generator-typescript-utils/dependencies/DependencyManager.js';\nimport equal from 'fast-deep-equal';\nimport { OpenAPIV3 } from 'openapi-types';\nimport type { ReadonlyDeep } from 'type-fest';\nimport type { Expression, Statement, TypeNode } from 'typescript';\nimport ts from 'typescript';\nimport EndpointMethodRequestBodyProcessor from './EndpointMethodRequestBodyProcessor.js';\nimport EndpointMethodResponseProcessor from './EndpointMethodResponseProcessor.js';\n\nexport type EndpointMethodOperation = ReadonlyDeep<OpenAPIV3.OperationObject>;\n\nexport const INIT_TYPE_NAME = 'EndpointRequestInit';\nexport const HILLA_FRONTEND_NAME = '@hilla/frontend';\n\nexport default abstract class EndpointMethodOperationProcessor {\n  public static createProcessor(\n    httpMethod: OpenAPIV3.HttpMethods,\n    endpointName: string,\n    endpointMethodName: string,\n    operation: EndpointMethodOperation,\n    dependencies: DependencyManager,\n    owner: Plugin,\n  ): EndpointMethodOperationProcessor | undefined {\n    switch (httpMethod) {\n      case OpenAPIV3.HttpMethods.POST:\n        // eslint-disable-next-line no-use-before-define\n        return new EndpointMethodOperationPOSTProcessor(\n          endpointName,\n          endpointMethodName,\n          operation,\n          dependencies,\n          owner,\n        );\n      default:\n        owner.logger.warn(`Processing ${httpMethod.toUpperCase()} currently is not supported`);\n        return undefined;\n    }\n  }\n\n  public abstract process(outputDir?: string): Promise<Statement | undefined>;\n}\n\nclass EndpointMethodOperationPOSTProcessor extends EndpointMethodOperationProcessor {\n  readonly #dependencies: DependencyManager;\n  readonly #endpointMethodName: string;\n  readonly #endpointName: string;\n  readonly #operation: EndpointMethodOperation;\n  readonly #owner: Plugin;\n\n  public constructor(\n    endpointName: string,\n    endpointMethodName: string,\n    operation: EndpointMethodOperation,\n    dependencies: DependencyManager,\n    owner: Plugin,\n  ) {\n    super();\n    this.#owner = owner;\n    this.#dependencies = dependencies;\n    this.#endpointName = endpointName;\n    this.#endpointMethodName = endpointMethodName;\n    this.#operation = operation;\n  }\n\n  public async process(outputDir?: string): Promise<Statement | undefined> {\n    const { exports, imports, paths } = this.#dependencies;\n    this.#owner.logger.debug(`${this.#endpointName}.${this.#endpointMethodName} - processing POST method`);\n    const initTypeIdentifier = imports.named.getIdentifier(\n      paths.createBareModulePath(HILLA_FRONTEND_NAME),\n      INIT_TYPE_NAME,\n    )!;\n\n    const { parameters, packedParameters, initParam } = new EndpointMethodRequestBodyProcessor(\n      this.#operation.requestBody,\n      this.#dependencies,\n      this.#owner,\n      initTypeIdentifier,\n    ).process();\n\n    const methodIdentifier = exports.named.add(this.#endpointMethodName);\n    const clientLibIdentifier = imports.default.getIdentifier(\n      paths.createRelativePath(await ClientPlugin.getClientFileName(outputDir)),\n    )!;\n\n    const callExpression = ts.factory.createCallExpression(\n      ts.factory.createPropertyAccessExpression(clientLibIdentifier, ts.factory.createIdentifier('call')),\n      undefined,\n      [\n        ts.factory.createStringLiteral(this.#endpointName),\n        ts.factory.createStringLiteral(this.#endpointMethodName),\n        packedParameters,\n        initParam,\n      ].filter(Boolean) as readonly Expression[],\n    );\n\n    const responseType = this.#prepareResponseType();\n\n    return ts.factory.createFunctionDeclaration(\n      undefined,\n      [ts.factory.createToken(ts.SyntaxKind.AsyncKeyword)],\n      undefined,\n      methodIdentifier,\n      undefined,\n      parameters,\n      ts.factory.createTypeReferenceNode('Promise', [responseType]),\n      ts.factory.createBlock([ts.factory.createReturnStatement(callExpression)]),\n    );\n  }\n\n  #prepareResponseType(): TypeNode {\n    this.#owner.logger.debug(`${this.#endpointName}.${this.#endpointMethodName} POST - processing response type`);\n\n    const responseTypes = Object.entries(this.#operation.responses)\n      .flatMap(([code, response]) =>\n        new EndpointMethodResponseProcessor(code, response, this.#dependencies, this.#owner).process(),\n      )\n      .filter((value, index, arr) => arr.findIndex((v) => equal(v, value)) === index);\n\n    if (responseTypes.length === 0) {\n      return ts.factory.createKeywordTypeNode(ts.SyntaxKind.VoidKeyword);\n    }\n\n    return ts.factory.createUnionTypeNode(responseTypes);\n  }\n}\n"]}