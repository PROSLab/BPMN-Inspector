{"version":3,"file":"index.js","sourceRoot":"","sources":["src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import Plugin from '@hilla/generator-typescript-core/Plugin.js';\nimport type SharedStorage from '@hilla/generator-typescript-core/SharedStorage';\nimport type { OpenAPIV3 } from 'openapi-types';\nimport type { ReadonlyDeep } from 'type-fest';\nimport type { SourceFile } from 'typescript';\nimport EndpointProcessor from './EndpointProcessor.js';\nimport { EntityProcessor } from './EntityProcessor.js';\n\nexport enum BackbonePluginSourceType {\n  Endpoint = 'endpoint',\n  Entity = 'entity',\n}\n\nexport default class BackbonePlugin extends Plugin {\n  public static readonly BACKBONE_PLUGIN_FILE_TAGS = 'BACKBONE_PLUGIN_FILE_TAGS';\n  public declare ['constructor']: typeof BackbonePlugin;\n  readonly #tags = new WeakMap<SourceFile, BackbonePluginSourceType>();\n\n  public override get path(): string {\n    return import.meta.url;\n  }\n\n  public override async execute(storage: SharedStorage): Promise<void> {\n    const endpointSourceFiles = await this.#processEndpoints(storage);\n    const entitySourceFiles = this.#processEntities(storage);\n\n    endpointSourceFiles.forEach((file) => this.#tags.set(file, BackbonePluginSourceType.Endpoint));\n    entitySourceFiles.forEach((file) => this.#tags.set(file, BackbonePluginSourceType.Entity));\n\n    storage.sources.push(...endpointSourceFiles, ...entitySourceFiles);\n    storage.pluginStorage.set(this.constructor.BACKBONE_PLUGIN_FILE_TAGS, this.#tags);\n  }\n\n  async #processEndpoints(storage: SharedStorage): Promise<readonly SourceFile[]> {\n    this.logger.debug('Processing endpoints');\n    const endpoints = new Map<string, Map<string, ReadonlyDeep<OpenAPIV3.PathItemObject>>>();\n\n    Object.entries(storage.api.paths)\n      .filter(([, pathItem]) => !!pathItem)\n      .forEach(([path, pathItem]) => {\n        const [, endpointName, endpointMethodName] = path.split('/');\n\n        let methods: Map<string, ReadonlyDeep<OpenAPIV3.PathItemObject>>;\n\n        if (endpoints.has(endpointName)) {\n          methods = endpoints.get(endpointName)!;\n        } else {\n          methods = new Map();\n          endpoints.set(endpointName, methods);\n        }\n\n        methods.set(endpointMethodName, pathItem!);\n      });\n\n    const processors = await Promise.all(\n      [...endpoints.entries()].map(([endpointName, methods]) =>\n        EndpointProcessor.create(endpointName, this, methods, storage.outputDir),\n      ),\n    );\n\n    return Promise.all(processors.map((processor) => processor.process()));\n  }\n\n  #processEntities(storage: SharedStorage): readonly SourceFile[] {\n    this.logger.debug('Processing entities');\n\n    return storage.api.components?.schemas\n      ? Object.entries(storage.api.components?.schemas).map(([name, component]) =>\n          new EntityProcessor(name, component, this).process(),\n        )\n      : [];\n  }\n}\n"]}