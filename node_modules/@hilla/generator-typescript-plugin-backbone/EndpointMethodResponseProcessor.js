import TypeSchemaProcessor from './TypeSchemaProcessor.js';
import { defaultMediaType } from './utils.js';
export default class EndpointMethodResponseProcessor {
    #code;
    #dependencies;
    #owner;
    #response;
    constructor(code, response, dependencyManager, owner) {
        this.#code = code;
        this.#owner = owner;
        this.#dependencies = dependencyManager;
        this.#response = owner.resolver.resolve(response);
    }
    process() {
        switch (this.#code) {
            case '200':
                return this.#processOk();
            default:
                this.#owner.logger.warn(`Response code '${this.#code} is not supported'`);
                return [];
        }
    }
    #processOk() {
        const rawSchema = this.#response.content?.[defaultMediaType]?.schema;
        return rawSchema ? new TypeSchemaProcessor(rawSchema, this.#dependencies).process() : [];
    }
}
//# sourceMappingURL=EndpointMethodResponseProcessor.js.map