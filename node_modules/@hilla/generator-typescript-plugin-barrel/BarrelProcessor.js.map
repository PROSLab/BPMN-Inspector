{"version":3,"file":"BarrelProcessor.js","sourceRoot":"","sources":["src/BarrelProcessor.ts"],"names":[],"mappings":"AACA,OAAO,gBAAgB,MAAM,uDAAuD,CAAC;AACrF,OAAO,iBAAiB,MAAM,qEAAqE,CAAC;AACpG,OAAO,WAAW,MAAM,+DAA+D,CAAC;AACxF,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAGzC,MAAM,CAAC,OAAO,OAAO,eAAe;IAC3B,MAAM,CAAU,gBAAgB,GAAG,cAAc,CAAC;IAEhD,UAAU,CAAwB;IAClC,MAAM,CAAS;IACf,YAAY,GAAG,IAAI,WAAW,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,CAAC;IAE7D,YAAmB,SAAgC,EAAE,KAAa;QAChE,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;QAC5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;IACtB,CAAC;IAEM,OAAO;QACZ,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,eAAe,IAAI,CAAC,WAAW,CAAC,gBAAgB,QAAQ,CAAC,CAAC;QAElF,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE;YACxE,MAAM,SAAS,GAAG,QAAQ,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAC5C,MAAM,IAAI,GAAG,GAAG,OAAO,CAAC,QAAQ,CAAC,IAAI,SAAS,EAAE,CAAC;YAEjD,MAAM,EAAE,GAAG,GAAG,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,kBAAkB,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,CAAC;YACpF,GAAG,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,CAAC,CAAC;YAE5C,OAAO,GAAG,CAAC;QACb,CAAC,EAAE,IAAI,iBAAiB,CAAC,IAAI,WAAW,EAAE,CAAC,CAAC,CAAC;QAE7C,OAAO,gBAAgB,CACrB,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,EAAE,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAC1C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,WAAW,CAAC,CAClD,CAAC;IACJ,CAAC","sourcesContent":["import type Plugin from '@hilla/generator-typescript-core/Plugin.js';\nimport createSourceFile from '@hilla/generator-typescript-utils/createSourceFile.js';\nimport DependencyManager from '@hilla/generator-typescript-utils/dependencies/DependencyManager.js';\nimport PathManager from '@hilla/generator-typescript-utils/dependencies/PathManager.js';\nimport { basename, dirname } from 'path';\nimport type { SourceFile } from 'typescript';\n\nexport default class BarrelProcessor {\n  public static readonly BARREL_FILE_NAME = 'endpoints.ts';\n  public declare ['constructor']: typeof BarrelProcessor;\n  readonly #endpoints: readonly SourceFile[];\n  readonly #owner: Plugin;\n  readonly #sourcePaths = new PathManager({ extension: 'ts' });\n\n  public constructor(endpoints: readonly SourceFile[], owner: Plugin) {\n    this.#endpoints = endpoints;\n    this.#owner = owner;\n  }\n\n  public process(): SourceFile {\n    this.#owner.logger.info(`Generating '${this.constructor.BARREL_FILE_NAME}' file`);\n\n    const { exports, imports } = this.#endpoints.reduce((acc, { fileName }) => {\n      const specifier = basename(fileName, '.ts');\n      const path = `${dirname(fileName)}/${specifier}`;\n\n      const id = acc.imports.namespace.add(acc.paths.createRelativePath(path), specifier);\n      acc.exports.named.add(specifier, false, id);\n\n      return acc;\n    }, new DependencyManager(new PathManager()));\n\n    return createSourceFile(\n      [...imports.toCode(), ...exports.toCode()],\n      this.#sourcePaths.createRelativePath('endpoints'),\n    );\n  }\n}\n"]}