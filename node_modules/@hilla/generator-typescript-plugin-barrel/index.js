import Plugin from '@hilla/generator-typescript-core/Plugin.js';
import BackbonePlugin, { BackbonePluginSourceType } from '@hilla/generator-typescript-plugin-backbone';
import PluginError from '@hilla/generator-typescript-utils/PluginError.js';
import BarrelProcessor from './BarrelProcessor.js';
export default class BarrelPlugin extends Plugin {
    get path() {
        return import.meta.url;
    }
    async execute({ pluginStorage, sources }) {
        const tags = pluginStorage.get(BackbonePlugin.BACKBONE_PLUGIN_FILE_TAGS);
        if (!tags) {
            throw new PluginError(`${BackbonePlugin.name} should be run first.`, this.constructor.name);
        }
        const endpoints = sources.filter((file) => tags.get(file) === BackbonePluginSourceType.Endpoint);
        const barrelFile = new BarrelProcessor(endpoints, this).process();
        sources.push(barrelFile);
    }
}
//# sourceMappingURL=index.js.map