{"version":3,"file":"Annotation.js","sourceRoot":"","sources":["src/Annotation.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,0BAA0B,GAG3B,MAAM,4CAA4C,CAAC;AAOpD,MAAM,UAAU,iBAAiB,CAAC,MAAc;IAC9C,OAAO,0BAA0B,CAAC,MAAM,CAAC,IAAI,eAAe,IAAI,MAAM,CAAC;AACzE,CAAC;AAED,MAAM,UAAU,6BAA6B,CAAC,MAAc;IAC1D,OAAO,0BAA0B,CAAC,MAAM,CAAC,IAAI,0BAA0B,IAAI,MAAM,CAAC;AACpF,CAAC","sourcesContent":["import {\n  isNonComposedRegularSchema,\n  NonComposedRegularSchema,\n  Schema,\n} from '@hilla/generator-typescript-core/Schema.js';\n\nexport type AnnotatedSchema = NonComposedRegularSchema & Readonly<{ 'x-annotations': ReadonlyArray<string> }>;\n\nexport type ValidationConstrainedSchema = NonComposedRegularSchema &\n  Readonly<{ 'x-validation-constraints': ReadonlyArray<Annotation> }>;\n\nexport function isAnnotatedSchema(schema: Schema): schema is AnnotatedSchema {\n  return isNonComposedRegularSchema(schema) && 'x-annotations' in schema;\n}\n\nexport function isValidationConstrainedSchema(schema: Schema): schema is ValidationConstrainedSchema {\n  return isNonComposedRegularSchema(schema) && 'x-validation-constraints' in schema;\n}\n\nexport type AnnotationPrimitiveAttribute = boolean | number | string;\nexport type AnnotationAttribute = AnnotationPrimitiveAttribute | AnnotationNamedAttributes;\nexport interface AnnotationNamedAttributes {\n  readonly [name: string]: AnnotationPrimitiveAttribute;\n}\n\nexport interface Annotation {\n  simpleName: string;\n  attributes?: AnnotationNamedAttributes;\n}\n"]}