{"version":3,"file":"BinderNode.js","sourceRoot":"","sources":["src/BinderNode.ts"],"names":[],"mappings":"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","sourcesContent":["/*\n * Copyright 2000-2020 Vaadin Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"); you may not\n * use this file except in compliance with the License. You may obtain a copy of\n * the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT\n * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the\n * License for the specific language governing permissions and limitations under\n * the License.\n */\n// TODO: Fix dependency cycle\n\nimport type { Binder } from './Binder.js';\n// eslint-disable-next-line import/no-cycle\nimport {\n  _binderNode,\n  _ItemModel,\n  _key,\n  _parent,\n  _validators,\n  AbstractModel,\n  ArrayModel,\n  getBinderNode,\n  ModelConstructor,\n  ModelValue,\n  ObjectModel,\n} from './Models.js';\nimport type { Validator, ValueError } from './Validation.js';\n\nconst _ownErrors = Symbol('ownErrorsSymbol');\nconst _visited = Symbol('visited');\n\nfunction getErrorPropertyName(valueError: ValueError<any>): string {\n  return typeof valueError.property === 'string' ? valueError.property : getBinderNode(valueError.property).name;\n}\n\n/**\n * The BinderNode<T, M> class provides the form binding related APIs\n * with respect to a particular model instance.\n *\n * Structurally, model instances form a tree, in which the object\n * and array models have child nodes of field and array item model\n * instances.\n */\nexport class BinderNode<T, M extends AbstractModel<T>> {\n  public readonly model: M;\n\n  private [_visited] = false;\n\n  private [_validators]: ReadonlyArray<Validator<T>>;\n\n  private [_ownErrors]?: ReadonlyArray<ValueError<T>>;\n\n  private defaultArrayItemValue?: T;\n\n  public constructor(model: M) {\n    this.model = model;\n    model[_binderNode] = this;\n    this.initializeValue();\n    this[_validators] = model[_validators];\n  }\n\n  /**\n   * The parent node, if this binder node corresponds to a nested model,\n   * otherwise undefined for the top-level binder.\n   */\n  public get parent(): BinderNode<any, AbstractModel<any>> | undefined {\n    const modelParent = this.model[_parent];\n    return modelParent instanceof AbstractModel ? getBinderNode(modelParent) : undefined;\n  }\n\n  /**\n   * The binder for the top-level model.\n   */\n  public get binder(): Binder<any, AbstractModel<any>> {\n    return this.parent ? this.parent.binder : (this as any);\n  }\n\n  /**\n   * The name generated from the model structure, used to set the name\n   * attribute on the field components.\n   */\n  public get name(): string {\n    let model = this.model as AbstractModel<any>;\n    const strings = [];\n    while (model[_parent] instanceof AbstractModel) {\n      strings.unshift(String(model[_key]));\n      model = model[_parent] as AbstractModel<any>;\n    }\n    return strings.join('.');\n  }\n\n  /**\n   * The current value related to the model\n   */\n  public get value(): T | undefined {\n    if (this.parent!.value === undefined) {\n      this.parent!.initializeValue(true);\n    }\n    return this.parent!.value[this.model[_key]];\n  }\n\n  public set value(value: T | undefined) {\n    this.setValueState(value);\n  }\n\n  /**\n   * The default value related to the model\n   */\n  public get defaultValue(): T {\n    if (this.parent && this.parent.model instanceof ArrayModel) {\n      if (!this.parent.defaultArrayItemValue) {\n        this.parent.defaultArrayItemValue = this.parent.model[_ItemModel].createEmptyValue();\n      }\n\n      return this.parent.defaultArrayItemValue;\n    }\n\n    return this.parent!.defaultValue[this.model[_key]];\n  }\n\n  /**\n   * True if the current value is different from the defaultValue.\n   */\n  public get dirty(): boolean {\n    return this.value !== this.defaultValue;\n  }\n\n  /**\n   * The array of validators for the model. The default value is defined in the\n   * model.\n   */\n  public get validators(): ReadonlyArray<Validator<T>> {\n    return this[_validators];\n  }\n\n  public set validators(validators: ReadonlyArray<Validator<T>>) {\n    this[_validators] = validators;\n  }\n\n  /**\n   * Returns a binder node for the nested model instance.\n   *\n   * @param model The nested model instance\n   */\n  public for<NM extends AbstractModel<any>>(model: NM): BinderNode<ReturnType<NM['valueOf']>, NM> {\n    const binderNode = getBinderNode(model);\n    if (binderNode.binder !== this.binder) {\n      throw new Error('Unknown binder');\n    }\n\n    return binderNode;\n  }\n\n  /**\n   * Runs all validation callbacks potentially affecting this\n   * or any nested model. Returns the combined array of all\n   * errors as in the errors property.\n   */\n  public async validate(): Promise<ReadonlyArray<ValueError<any>>> {\n    // TODO: Replace reduce() with flat() when the following issue is solved\n    //  https://github.com/vaadin/flow/issues/8658\n    const errors = (\n      await Promise.all([...this.requestValidationOfDescendants(), ...this.requestValidationWithAncestors()])\n    )\n      .reduce((acc, val) => acc.concat(val), [])\n      .filter((valueError) => valueError) as ReadonlyArray<ValueError<any>>;\n    this.setErrorsWithDescendants(errors.length ? errors : undefined);\n    this.update();\n    return errors;\n  }\n\n  /**\n   * A helper method to add a validator\n   *\n   * @param validator a validator\n   */\n  public addValidator(validator: Validator<T>) {\n    this.validators = [...this[_validators], validator];\n  }\n\n  /**\n   * True if the bound field was ever focused and blurred by the user.\n   */\n  public get visited() {\n    return this[_visited];\n  }\n\n  public set visited(v) {\n    if (this[_visited] !== v) {\n      this[_visited] = v;\n      this.updateValidation();\n    }\n  }\n\n  /**\n   * The combined array of all errors for this node’s model and all its nested\n   * models\n   */\n  public get errors(): ReadonlyArray<ValueError<any>> {\n    const descendantsErrors = [...this.getChildBinderNodes()].reduce(\n      (errors, childBinderNode) => [...errors, ...childBinderNode.errors],\n      [] as ReadonlyArray<any>,\n    );\n    return descendantsErrors.concat(this.ownErrors);\n  }\n\n  /**\n   * The array of validation errors directly related with the model.\n   */\n  public get ownErrors() {\n    return this[_ownErrors] ? this[_ownErrors] : [];\n  }\n\n  /**\n   * Indicates if there is any error for the node's model.\n   */\n  public get invalid() {\n    return this.errors.length > 0;\n  }\n\n  /**\n   * True if the value is required to be non-empty.\n   */\n  public get required() {\n    return this[_validators].some((validator) => validator.impliesRequired);\n  }\n\n  /**\n   * Append an item to the array value.\n   *\n   * Requires the context model to be an array reference.\n   *\n   * @param itemValue optional new item value, an empty item is\n   * appended if the argument is omitted\n   */\n  public appendItem<IT extends ModelValue<M extends ArrayModel<any, infer IM> ? IM : never>>(itemValue?: IT) {\n    if (!(this.model instanceof ArrayModel)) {\n      throw new Error('Model is not an array');\n    }\n\n    if (!itemValue) {\n      itemValue = this.model[_ItemModel].createEmptyValue();\n    }\n    this.value = [...(this.value as unknown as ReadonlyArray<IT>), itemValue] as unknown as T;\n  }\n\n  /**\n   * Prepend an item to the array value.\n   *\n   * Requires the context model to be an array reference.\n   *\n   * @param itemValue optional new item value, an empty item is prepended if\n   * the argument is omitted\n   */\n  public prependItem<IT extends ModelValue<M extends ArrayModel<any, infer IM> ? IM : never>>(itemValue?: IT) {\n    if (!(this.model instanceof ArrayModel)) {\n      throw new Error('Model is not an array');\n    }\n\n    if (!itemValue) {\n      itemValue = this.model[_ItemModel].createEmptyValue();\n    }\n    this.value = [itemValue, ...(this.value as unknown as ReadonlyArray<IT>)] as unknown as T;\n  }\n\n  /**\n   * Remove itself from the parent array value.\n   *\n   * Requires the context model to be an array item reference.\n   */\n  public removeSelf() {\n    if (!(this.model[_parent] instanceof ArrayModel)) {\n      throw new TypeError('Model is not an array item');\n    }\n    const itemIndex = this.model[_key] as number;\n    this.parent!.value = (this.parent!.value as ReadonlyArray<T>).filter((_, i) => i !== itemIndex);\n  }\n\n  protected clearValidation(): boolean {\n    if (this[_visited]) {\n      this[_visited] = false;\n    }\n    let needsUpdate = false;\n    if (this[_ownErrors]) {\n      this[_ownErrors] = undefined;\n      needsUpdate = true;\n    }\n    if ([...this.getChildBinderNodes()].filter((childBinderNode) => childBinderNode.clearValidation()).length > 0) {\n      needsUpdate = true;\n    }\n    return needsUpdate;\n  }\n\n  protected async updateValidation() {\n    if (this[_visited]) {\n      await this.validate();\n    } else if (this.dirty || this.invalid) {\n      await Promise.all([...this.getChildBinderNodes()].map((childBinderNode) => childBinderNode.updateValidation()));\n    }\n  }\n\n  protected update(_?: T): void {\n    if (this.parent) {\n      this.parent.update();\n    }\n  }\n\n  protected setErrorsWithDescendants(errors?: ReadonlyArray<ValueError<any>>) {\n    const { name } = this;\n    const ownErrors = errors ? errors.filter((valueError) => getErrorPropertyName(valueError) === name) : undefined;\n    const relatedErrors = errors\n      ? errors.filter((valueError) => getErrorPropertyName(valueError).startsWith(name))\n      : undefined;\n    this[_ownErrors] = ownErrors;\n    for (const childBinderNode of this.getChildBinderNodes()) {\n      childBinderNode.setErrorsWithDescendants(relatedErrors);\n    }\n  }\n\n  private *getChildBinderNodes(): Generator<BinderNode<unknown, AbstractModel<unknown>>> {\n    if (this.value === undefined) {\n      // Undefined value cannot have child properties and items.\n      return;\n    }\n\n    if (this.model instanceof ObjectModel) {\n      // We need to skip all non-initialised optional fields here in order to\n      // prevent infinite recursion for circular references in the model.\n      // Here we rely on presence of keys in `defaultValue` to detect all\n      // initialised fields. The keys in `defaultValue` are defined for all\n      // non-optional fields plus those optional fields whose values were set\n      // from initial `binder.read()` or `binder.clear()` or by using a\n      // binder node (e. g., form binding) for a nested field.\n      if (this.defaultValue) {\n        for (const [, getter] of ObjectModel.getOwnAndParentGetters(this.model)) {\n          const childModel = getter.call(this.model) as AbstractModel<unknown>;\n          if (childModel) {\n            yield getBinderNode(childModel);\n          }\n        }\n      }\n    } else if (this.model instanceof ArrayModel) {\n      for (const childBinderNode of this.model) {\n        yield childBinderNode;\n      }\n    }\n  }\n\n  private runOwnValidators(): ReadonlyArray<Promise<ReadonlyArray<ValueError<any>>>> {\n    return this[_validators].map((validator) => this.binder.requestValidation(this.model, validator));\n  }\n\n  private requestValidationOfDescendants(): ReadonlyArray<Promise<ReadonlyArray<ValueError<any>>>> {\n    return [...this.getChildBinderNodes()].reduce(\n      (promises, childBinderNode) => [\n        ...promises,\n        ...childBinderNode.runOwnValidators(),\n        ...childBinderNode.requestValidationOfDescendants(),\n      ],\n      [] as ReadonlyArray<Promise<ReadonlyArray<ValueError<any>>>>,\n    );\n  }\n\n  private requestValidationWithAncestors(): ReadonlyArray<Promise<ReadonlyArray<ValueError<any>>>> {\n    return [...this.runOwnValidators(), ...(this.parent ? this.parent.requestValidationWithAncestors() : [])];\n  }\n\n  private initializeValue(requiredByChildNode = false) {\n    // First, make sure parents have value initialized\n    if (this.parent && (this.parent.value === undefined || this.parent.defaultValue === undefined)) {\n      this.parent.initializeValue(true);\n    }\n\n    let value = this.parent ? this.parent.value[this.model[_key]] : undefined;\n\n    if (value === undefined) {\n      // Initialize value if a child node is accessed or for the root-level node\n      if (requiredByChildNode || !this.parent) {\n        value = value !== undefined ? value : (this.model.constructor as ModelConstructor<T, M>).createEmptyValue();\n        this.setValueState(value, this.defaultValue === undefined);\n      } else if (this.parent && this.parent.model instanceof ObjectModel && !(this.model[_key] in this.parent.value)) {\n        this.setValueState(undefined, this.defaultValue === undefined);\n      }\n    }\n  }\n\n  private setValueState(value: T | undefined, keepPristine = false) {\n    const modelParent = this.model[_parent];\n    if (modelParent instanceof ObjectModel) {\n      // Value contained in object - replace object in parent\n      const object = {\n        ...this.parent!.value,\n        [this.model[_key]]: value,\n      };\n      this.parent!.setValueState(object, keepPristine);\n      return;\n    }\n\n    if (value === undefined) {\n      throw new TypeError('Unexpected undefined value');\n    }\n\n    if (modelParent instanceof ArrayModel) {\n      // Value contained in array - replace array in parent\n      const array = (this.parent!.value as ReadonlyArray<T>).slice();\n      array[this.model[_key] as number] = value;\n      this.parent!.setValueState(array, keepPristine);\n    } else {\n      // Value contained elsewhere, probably binder - use value property setter\n      const binder = modelParent as Binder<T, M>;\n      if (keepPristine && !binder.dirty) {\n        binder.defaultValue = value;\n      }\n      binder.value = value!;\n    }\n  }\n}\n"]}