{"version":3,"file":"Validation.js","sourceRoot":"","sources":["src/Validation.ts"],"names":[],"mappings":"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","sourcesContent":["// TODO: Fix dependency cycle\n\n// eslint-disable-next-line import/no-cycle\nimport { AbstractModel, NumberModel, getBinderNode } from './Models.js';\n\nimport type { Binder } from './Binder.js';\nimport type { BinderNode } from './BinderNode.js';\n// eslint-disable-next-line import/no-cycle\nimport { Required } from './Validators.js';\n\nexport interface ValueError<T> {\n  property: string | AbstractModel<any>;\n  message: string;\n  value: T;\n  validator: Validator<T>;\n}\n\nexport interface ValidationResult {\n  property: string | AbstractModel<any>;\n  message?: string;\n}\n\nexport class ValidationError extends Error {\n  public constructor(public errors: ReadonlyArray<ValueError<any>>) {\n    super(\n      [\n        'There are validation errors in the form.',\n        ...errors.map((e) => `${e.property} - ${e.validator.constructor.name}${e.message ? `: ${e.message}` : ''}`),\n      ].join('\\n - '),\n    );\n    this.name = this.constructor.name;\n  }\n}\n\nexport type ValidationCallback<T> = (\n  value: T,\n  binder: Binder<any, AbstractModel<T>>,\n) =>\n  | boolean\n  | ValidationResult\n  | ReadonlyArray<ValidationResult>\n  | Promise<boolean | ValidationResult | ReadonlyArray<ValidationResult>>;\n\nexport type InterpolateMessageCallback<T> = (\n  message: string,\n  validator: Validator<T>,\n  binderNode: BinderNode<T, AbstractModel<T>>,\n) => string;\n\nexport interface Validator<T> {\n  validate: ValidationCallback<T>;\n  message: string;\n  impliesRequired?: boolean;\n}\n\nexport class ServerValidator implements Validator<any> {\n  public message: string;\n\n  public constructor(message: string) {\n    this.message = message;\n  }\n\n  public validate = () => false;\n}\n\n// The `property` field of `ValidationResult`s is a path relative to the parent.\nfunction setPropertyAbsolutePath<T>(binderNodeName: string, result: ValidationResult): ValidationResult {\n  if (typeof result.property === 'string' && binderNodeName.length > 0) {\n    result.property = `${binderNodeName}.${result.property}`;\n  }\n  return result;\n}\n\nexport async function runValidator<T>(\n  model: AbstractModel<T>,\n  validator: Validator<T>,\n  interpolateMessageCallback?: InterpolateMessageCallback<T>,\n): Promise<ReadonlyArray<ValueError<T>>> {\n  const binderNode = getBinderNode(model);\n  const value = binderNode.value!;\n\n  const interpolateMessage = (message: string) => {\n    if (!interpolateMessageCallback) {\n      return message;\n    }\n    return interpolateMessageCallback(message, validator, binderNode);\n  };\n\n  // If model is not required and value empty, do not run any validator. Except\n  // always validate NumberModel, which has a mandatory builtin validator\n  // to indicate NaN input.\n  if (!binderNode.required && !new Required().validate(value) && !(model instanceof NumberModel)) {\n    return [];\n  }\n  return (async () => validator.validate(value, binderNode.binder))().then((result) => {\n    if (result === false) {\n      return [{ property: binderNode.name, value, validator, message: interpolateMessage(validator.message) }];\n    }\n    if (result === true || (Array.isArray(result) && result.length === 0)) {\n      return [];\n    }\n    if (Array.isArray(result)) {\n      return result.map((result2) => ({\n        message: interpolateMessage(validator.message),\n        ...setPropertyAbsolutePath(binderNode.name, result2),\n        value,\n        validator,\n      }));\n    }\n    return [\n      {\n        message: interpolateMessage(validator.message),\n        ...setPropertyAbsolutePath(binderNode.name, result as ValidationResult),\n        value,\n        validator,\n      },\n    ];\n  });\n}\n"]}