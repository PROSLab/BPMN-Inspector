{"version":3,"file":"utils.js","sourceRoot":"","sources":["src/utils.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;AAC3C,OAAO,QAAQ,MAAM,WAAW,CAAC;AAGjC,MAAM,CAAC,KAAK,UAAU,YAAY,CAAC,EAAe,EAAE,GAAY;IAC9D,IAAI,GAAG,EAAE;QACP,IAAI,MAAM,GAAG,GAAG,CAAC;QAEjB,IAAI,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YACpD,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;SAC3C;QAED,IAAI,MAAM,CAAC,UAAU,CAAC,GAAG,CAAC,EAAE;YAC1B,OAAO,MAAM,CAAC;SACf;QAED,OAAO,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC,CAAC;KACvE;IAED,OAAO,QAAQ,EAAE,CAAC;AACpB,CAAC","sourcesContent":["import { isAbsolute, resolve } from 'path';\nimport getStdin from 'get-stdin';\nimport type GeneratorIO from './GeneratorIO.js';\n\nexport async function processInput(io: GeneratorIO, raw?: string): Promise<string> {\n  if (raw) {\n    let result = raw;\n\n    if (result.startsWith(\"'\") || result.startsWith('\"')) {\n      result = raw.substring(1, raw.length - 1);\n    }\n\n    if (result.startsWith('{')) {\n      return result;\n    }\n\n    return io.read(isAbsolute(result) ? result : resolve(io.cwd, result));\n  }\n\n  return getStdin();\n}\n"]}