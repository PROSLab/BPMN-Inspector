export default class PluginManager {
    #plugins;
    constructor(plugins, resolver, logger) {
        logger.global.info(`Plugins: ${plugins.map(({ name }) => name).join(', ')}`);
        this.#plugins = plugins.map((PluginClass) => new PluginClass(resolver, logger));
    }
    async execute(storage) {
        // We need to run plugins sequentially
        for (const plugin of this.#plugins) {
            const { name, path } = plugin;
            plugin.logger.debug({ plugin: { name, path } }, `Executing plugin '${plugin.name}'`);
            // eslint-disable-next-line no-await-in-loop
            await plugin.execute(storage);
        }
    }
}
//# sourceMappingURL=PluginManager.js.map