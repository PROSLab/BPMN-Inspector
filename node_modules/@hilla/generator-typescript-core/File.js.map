{"version":3,"file":"File.js","sourceRoot":"","sources":["src/File.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAe,MAAM,aAAa,CAAC;AAShD,MAAM,CAAC,OAAO,OAAO,IAAK,SAAQ,IAAI;IAC3B,aAAa,CAAU;IACvB,KAAK,CAAS;IAEvB,YAAmB,QAAkC,EAAE,QAAgB,EAAE,OAAqB;QAC5F,KAAK,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACzB,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;QACtB,IAAI,CAAC,aAAa,GAAG,OAAO,EAAE,YAAY,CAAC;IAC7C,CAAC;IAED,IAAW,IAAI;QACb,OAAO,IAAI,CAAC,KAAK,CAAC;IACpB,CAAC;CACF","sourcesContent":["import { Blob, BlobOptions } from 'node:buffer';\nimport type { BinaryLike } from 'node:crypto';\n\nexport type FileOptions = Readonly<\n  BlobOptions & {\n    lastModified?: number;\n  }\n>;\n\nexport default class File extends Blob {\n  readonly #lastModified?: number;\n  readonly #name: string;\n\n  public constructor(fileBits: Array<BinaryLike | Blob>, fileName: string, options?: FileOptions) {\n    super(fileBits, options);\n    this.#name = fileName;\n    this.#lastModified = options?.lastModified;\n  }\n\n  public get name(): string {\n    return this.#name;\n  }\n}\n"]}