var d=(t=>typeof require<"u"?require:typeof Proxy<"u"?new Proxy(t,{get:(e,r)=>(typeof require<"u"?require:e)[r]}):t)(function(t){if(typeof require<"u")return require.apply(this,arguments);throw new Error('Dynamic require of "'+t+'" is not supported')});import{StyleSheet as A}from"react-native";import{createHost as P,AnimatedObject as V}from"@react-spring/animated";import{is as i,Globals as w,createStringInterpolator as b,colors as g}from"@react-spring/shared";import{Text as c,View as f,Image as u}from"react-native";var m={View:f,Text:c,Image:u};import{AnimatedObject as S}from"@react-spring/animated";import{each as l,eachProp as n,getFluidValue as h}from"@react-spring/shared";import{AnimatedObject as x}from"@react-spring/animated";var o=class extends x{constructor(e){super(e)}getValue(){return this.source?this.source.map(e=>{let r={};return n(e,(s,p)=>{r[p]=h(s)}),r}):[]}setValue(e){this.source=e,this.payload=this._makePayload(e)}_makePayload(e){if(!e)return[];let r=new Set;return l(e,s=>n(s,this._addToPayload,r)),Array.from(r)}};var a=class extends S{constructor(e){super(e)}setValue(e){super.setValue(e&&e.transform?{...e,transform:new o(e.transform)}:e)}};export*from"@react-spring/core";w.assign({batchedUpdates:d("react-native").unstable_batchedUpdates,createStringInterpolator:b,colors:g});var y=P(m,{applyAnimatedValues(t,e){return i.und(e.children)&&t.setNativeProps?(t.setNativeProps(e),!0):!1},createAnimatedStyle(t){return t=A.flatten(t),i.obj(t.shadowOffset)&&(t.shadowOffset=new V(t.shadowOffset)),new a(t)}}),E=y.animated;export{E as a,E as animated};
