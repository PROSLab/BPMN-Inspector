{
  "version": 3,
  "sources": ["../../save-svg-as-png/lib/saveSvgAsPng.js"],
  "sourcesContent": ["'use strict';\n\n(function () {\n  var out$ = typeof exports != 'undefined' && exports || typeof define != 'undefined' && {} || this || window;\n  if (typeof define !== 'undefined') define('save-svg-as-png', [], function () {\n    return out$;\n  });\n  out$.default = out$;\n\n  var xmlNs = 'http://www.w3.org/2000/xmlns/';\n  var xhtmlNs = 'http://www.w3.org/1999/xhtml';\n  var svgNs = 'http://www.w3.org/2000/svg';\n  var doctype = '<?xml version=\"1.0\" standalone=\"no\"?><!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\" [<!ENTITY nbsp \"&#160;\">]>';\n  var urlRegex = /url\\([\"']?(.+?)[\"']?\\)/;\n  var fontFormats = {\n    woff2: 'font/woff2',\n    woff: 'font/woff',\n    otf: 'application/x-font-opentype',\n    ttf: 'application/x-font-ttf',\n    eot: 'application/vnd.ms-fontobject',\n    sfnt: 'application/font-sfnt',\n    svg: 'image/svg+xml'\n  };\n\n  var isElement = function isElement(obj) {\n    return obj instanceof HTMLElement || obj instanceof SVGElement;\n  };\n  var requireDomNode = function requireDomNode(el) {\n    if (!isElement(el)) throw new Error('an HTMLElement or SVGElement is required; got ' + el);\n  };\n  var requireDomNodePromise = function requireDomNodePromise(el) {\n    return new Promise(function (resolve, reject) {\n      if (isElement(el)) resolve(el);else reject(new Error('an HTMLElement or SVGElement is required; got ' + el));\n    });\n  };\n  var isExternal = function isExternal(url) {\n    return url && url.lastIndexOf('http', 0) === 0 && url.lastIndexOf(window.location.host) === -1;\n  };\n\n  var getFontMimeTypeFromUrl = function getFontMimeTypeFromUrl(fontUrl) {\n    var formats = Object.keys(fontFormats).filter(function (extension) {\n      return fontUrl.indexOf('.' + extension) > 0;\n    }).map(function (extension) {\n      return fontFormats[extension];\n    });\n    if (formats) return formats[0];\n    console.error('Unknown font format for ' + fontUrl + '. Fonts may not be working correctly.');\n    return 'application/octet-stream';\n  };\n\n  var arrayBufferToBase64 = function arrayBufferToBase64(buffer) {\n    var binary = '';\n    var bytes = new Uint8Array(buffer);\n    for (var i = 0; i < bytes.byteLength; i++) {\n      binary += String.fromCharCode(bytes[i]);\n    }return window.btoa(binary);\n  };\n\n  var getDimension = function getDimension(el, clone, dim) {\n    var v = el.viewBox && el.viewBox.baseVal && el.viewBox.baseVal[dim] || clone.getAttribute(dim) !== null && !clone.getAttribute(dim).match(/%$/) && parseInt(clone.getAttribute(dim)) || el.getBoundingClientRect()[dim] || parseInt(clone.style[dim]) || parseInt(window.getComputedStyle(el).getPropertyValue(dim));\n    return typeof v === 'undefined' || v === null || isNaN(parseFloat(v)) ? 0 : v;\n  };\n\n  var getDimensions = function getDimensions(el, clone, width, height) {\n    if (el.tagName === 'svg') return {\n      width: width || getDimension(el, clone, 'width'),\n      height: height || getDimension(el, clone, 'height')\n    };else if (el.getBBox) {\n      var _el$getBBox = el.getBBox(),\n          x = _el$getBBox.x,\n          y = _el$getBBox.y,\n          _width = _el$getBBox.width,\n          _height = _el$getBBox.height;\n\n      return {\n        width: x + _width,\n        height: y + _height\n      };\n    }\n  };\n\n  var reEncode = function reEncode(data) {\n    return decodeURIComponent(encodeURIComponent(data).replace(/%([0-9A-F]{2})/g, function (match, p1) {\n      var c = String.fromCharCode('0x' + p1);\n      return c === '%' ? '%25' : c;\n    }));\n  };\n\n  var uriToBlob = function uriToBlob(uri) {\n    var byteString = window.atob(uri.split(',')[1]);\n    var mimeString = uri.split(',')[0].split(':')[1].split(';')[0];\n    var buffer = new ArrayBuffer(byteString.length);\n    var intArray = new Uint8Array(buffer);\n    for (var i = 0; i < byteString.length; i++) {\n      intArray[i] = byteString.charCodeAt(i);\n    }\n    return new Blob([buffer], { type: mimeString });\n  };\n\n  var query = function query(el, selector) {\n    if (!selector) return;\n    try {\n      return el.querySelector(selector) || el.parentNode && el.parentNode.querySelector(selector);\n    } catch (err) {\n      console.warn('Invalid CSS selector \"' + selector + '\"', err);\n    }\n  };\n\n  var detectCssFont = function detectCssFont(rule, href) {\n    // Match CSS font-face rules to external links.\n    // @font-face {\n    //   src: local('Abel'), url(https://fonts.gstatic.com/s/abel/v6/UzN-iejR1VoXU2Oc-7LsbvesZW2xOQ-xsNqO47m55DA.woff2);\n    // }\n    var match = rule.cssText.match(urlRegex);\n    var url = match && match[1] || '';\n    if (!url || url.match(/^data:/) || url === 'about:blank') return;\n    var fullUrl = url.startsWith('../') ? href + '/../' + url : url.startsWith('./') ? href + '/.' + url : url;\n    return {\n      text: rule.cssText,\n      format: getFontMimeTypeFromUrl(fullUrl),\n      url: fullUrl\n    };\n  };\n\n  var inlineImages = function inlineImages(el) {\n    return Promise.all(Array.from(el.querySelectorAll('image')).map(function (image) {\n      var href = image.getAttributeNS('http://www.w3.org/1999/xlink', 'href') || image.getAttribute('href');\n      if (!href) return Promise.resolve(null);\n      if (isExternal(href)) {\n        href += (href.indexOf('?') === -1 ? '?' : '&') + 't=' + new Date().valueOf();\n      }\n      return new Promise(function (resolve, reject) {\n        var canvas = document.createElement('canvas');\n        var img = new Image();\n        img.crossOrigin = 'anonymous';\n        img.src = href;\n        img.onerror = function () {\n          return reject(new Error('Could not load ' + href));\n        };\n        img.onload = function () {\n          canvas.width = img.width;\n          canvas.height = img.height;\n          canvas.getContext('2d').drawImage(img, 0, 0);\n          image.setAttributeNS('http://www.w3.org/1999/xlink', 'href', canvas.toDataURL('image/png'));\n          resolve(true);\n        };\n      });\n    }));\n  };\n\n  var cachedFonts = {};\n  var inlineFonts = function inlineFonts(fonts) {\n    return Promise.all(fonts.map(function (font) {\n      return new Promise(function (resolve, reject) {\n        if (cachedFonts[font.url]) return resolve(cachedFonts[font.url]);\n\n        var req = new XMLHttpRequest();\n        req.addEventListener('load', function () {\n          // TODO: it may also be worth it to wait until fonts are fully loaded before\n          // attempting to rasterize them. (e.g. use https://developer.mozilla.org/en-US/docs/Web/API/FontFaceSet)\n          var fontInBase64 = arrayBufferToBase64(req.response);\n          var fontUri = font.text.replace(urlRegex, 'url(\"data:' + font.format + ';base64,' + fontInBase64 + '\")') + '\\n';\n          cachedFonts[font.url] = fontUri;\n          resolve(fontUri);\n        });\n        req.addEventListener('error', function (e) {\n          console.warn('Failed to load font from: ' + font.url, e);\n          cachedFonts[font.url] = null;\n          resolve(null);\n        });\n        req.addEventListener('abort', function (e) {\n          console.warn('Aborted loading font from: ' + font.url, e);\n          resolve(null);\n        });\n        req.open('GET', font.url);\n        req.responseType = 'arraybuffer';\n        req.send();\n      });\n    })).then(function (fontCss) {\n      return fontCss.filter(function (x) {\n        return x;\n      }).join('');\n    });\n  };\n\n  var cachedRules = null;\n  var styleSheetRules = function styleSheetRules() {\n    if (cachedRules) return cachedRules;\n    return cachedRules = Array.from(document.styleSheets).map(function (sheet) {\n      try {\n        return { rules: sheet.cssRules, href: sheet.href };\n      } catch (e) {\n        console.warn('Stylesheet could not be loaded: ' + sheet.href, e);\n        return {};\n      }\n    });\n  };\n\n  var inlineCss = function inlineCss(el, options) {\n    var _ref = options || {},\n        selectorRemap = _ref.selectorRemap,\n        modifyStyle = _ref.modifyStyle,\n        modifyCss = _ref.modifyCss,\n        fonts = _ref.fonts,\n        excludeUnusedCss = _ref.excludeUnusedCss;\n\n    var generateCss = modifyCss || function (selector, properties) {\n      var sel = selectorRemap ? selectorRemap(selector) : selector;\n      var props = modifyStyle ? modifyStyle(properties) : properties;\n      return sel + '{' + props + '}\\n';\n    };\n    var css = [];\n    var detectFonts = typeof fonts === 'undefined';\n    var fontList = fonts || [];\n    styleSheetRules().forEach(function (_ref2) {\n      var rules = _ref2.rules,\n          href = _ref2.href;\n\n      if (!rules) return;\n      Array.from(rules).forEach(function (rule) {\n        if (typeof rule.style != 'undefined') {\n          if (query(el, rule.selectorText)) css.push(generateCss(rule.selectorText, rule.style.cssText));else if (detectFonts && rule.cssText.match(/^@font-face/)) {\n            var font = detectCssFont(rule, href);\n            if (font) fontList.push(font);\n          } else if (!excludeUnusedCss) {\n            css.push(rule.cssText);\n          }\n        }\n      });\n    });\n\n    return inlineFonts(fontList).then(function (fontCss) {\n      return css.join('\\n') + fontCss;\n    });\n  };\n\n  var downloadOptions = function downloadOptions() {\n    if (!navigator.msSaveOrOpenBlob && !('download' in document.createElement('a'))) {\n      return { popup: window.open() };\n    }\n  };\n\n  out$.prepareSvg = function (el, options, done) {\n    requireDomNode(el);\n\n    var _ref3 = options || {},\n        _ref3$left = _ref3.left,\n        left = _ref3$left === undefined ? 0 : _ref3$left,\n        _ref3$top = _ref3.top,\n        top = _ref3$top === undefined ? 0 : _ref3$top,\n        w = _ref3.width,\n        h = _ref3.height,\n        _ref3$scale = _ref3.scale,\n        scale = _ref3$scale === undefined ? 1 : _ref3$scale,\n        _ref3$responsive = _ref3.responsive,\n        responsive = _ref3$responsive === undefined ? false : _ref3$responsive,\n        _ref3$excludeCss = _ref3.excludeCss,\n        excludeCss = _ref3$excludeCss === undefined ? false : _ref3$excludeCss;\n\n    return inlineImages(el).then(function () {\n      var clone = el.cloneNode(true);\n      clone.style.backgroundColor = (options || {}).backgroundColor || el.style.backgroundColor;\n\n      var _getDimensions = getDimensions(el, clone, w, h),\n          width = _getDimensions.width,\n          height = _getDimensions.height;\n\n      if (el.tagName !== 'svg') {\n        if (el.getBBox) {\n          if (clone.getAttribute('transform') != null) {\n            clone.setAttribute('transform', clone.getAttribute('transform').replace(/translate\\(.*?\\)/, ''));\n          }\n          var svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n          svg.appendChild(clone);\n          clone = svg;\n        } else {\n          console.error('Attempted to render non-SVG element', el);\n          return;\n        }\n      }\n\n      clone.setAttribute('version', '1.1');\n      clone.setAttribute('viewBox', [left, top, width, height].join(' '));\n      if (!clone.getAttribute('xmlns')) clone.setAttributeNS(xmlNs, 'xmlns', svgNs);\n      if (!clone.getAttribute('xmlns:xlink')) clone.setAttributeNS(xmlNs, 'xmlns:xlink', 'http://www.w3.org/1999/xlink');\n\n      if (responsive) {\n        clone.removeAttribute('width');\n        clone.removeAttribute('height');\n        clone.setAttribute('preserveAspectRatio', 'xMinYMin meet');\n      } else {\n        clone.setAttribute('width', width * scale);\n        clone.setAttribute('height', height * scale);\n      }\n\n      Array.from(clone.querySelectorAll('foreignObject > *')).forEach(function (foreignObject) {\n        foreignObject.setAttributeNS(xmlNs, 'xmlns', foreignObject.tagName === 'svg' ? svgNs : xhtmlNs);\n      });\n\n      if (excludeCss) {\n        var outer = document.createElement('div');\n        outer.appendChild(clone);\n        var src = outer.innerHTML;\n        if (typeof done === 'function') done(src, width, height);else return { src: src, width: width, height: height };\n      } else {\n        return inlineCss(el, options).then(function (css) {\n          var style = document.createElement('style');\n          style.setAttribute('type', 'text/css');\n          style.innerHTML = '<![CDATA[\\n' + css + '\\n]]>';\n\n          var defs = document.createElement('defs');\n          defs.appendChild(style);\n          clone.insertBefore(defs, clone.firstChild);\n\n          var outer = document.createElement('div');\n          outer.appendChild(clone);\n          var src = outer.innerHTML.replace(/NS\\d+:href/gi, 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href');\n\n          if (typeof done === 'function') done(src, width, height);else return { src: src, width: width, height: height };\n        });\n      }\n    });\n  };\n\n  out$.svgAsDataUri = function (el, options, done) {\n    requireDomNode(el);\n    return out$.prepareSvg(el, options).then(function (_ref4) {\n      var src = _ref4.src,\n          width = _ref4.width,\n          height = _ref4.height;\n\n      var svgXml = 'data:image/svg+xml;base64,' + window.btoa(reEncode(doctype + src));\n      if (typeof done === 'function') {\n        done(svgXml, width, height);\n      }\n      return svgXml;\n    });\n  };\n\n  out$.svgAsPngUri = function (el, options, done) {\n    requireDomNode(el);\n\n    var _ref5 = options || {},\n        _ref5$encoderType = _ref5.encoderType,\n        encoderType = _ref5$encoderType === undefined ? 'image/png' : _ref5$encoderType,\n        _ref5$encoderOptions = _ref5.encoderOptions,\n        encoderOptions = _ref5$encoderOptions === undefined ? 0.8 : _ref5$encoderOptions,\n        canvg = _ref5.canvg;\n\n    var convertToPng = function convertToPng(_ref6) {\n      var src = _ref6.src,\n          width = _ref6.width,\n          height = _ref6.height;\n\n      var canvas = document.createElement('canvas');\n      var context = canvas.getContext('2d');\n      var pixelRatio = window.devicePixelRatio || 1;\n\n      canvas.width = width * pixelRatio;\n      canvas.height = height * pixelRatio;\n      canvas.style.width = canvas.width + 'px';\n      canvas.style.height = canvas.height + 'px';\n      context.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n\n      if (canvg) canvg(canvas, src);else context.drawImage(src, 0, 0);\n\n      var png = void 0;\n      try {\n        png = canvas.toDataURL(encoderType, encoderOptions);\n      } catch (e) {\n        if (typeof SecurityError !== 'undefined' && e instanceof SecurityError || e.name === 'SecurityError') {\n          console.error('Rendered SVG images cannot be downloaded in this browser.');\n          return;\n        } else throw e;\n      }\n      if (typeof done === 'function') done(png, canvas.width, canvas.height);\n      return Promise.resolve(png);\n    };\n\n    if (canvg) return out$.prepareSvg(el, options).then(convertToPng);else return out$.svgAsDataUri(el, options).then(function (uri) {\n      return new Promise(function (resolve, reject) {\n        var image = new Image();\n        image.onload = function () {\n          return resolve(convertToPng({\n            src: image,\n            width: image.width,\n            height: image.height\n          }));\n        };\n        image.onerror = function () {\n          reject('There was an error loading the data URI as an image on the following SVG\\n' + window.atob(uri.slice(26)) + 'Open the following link to see browser\\'s diagnosis\\n' + uri);\n        };\n        image.src = uri;\n      });\n    });\n  };\n\n  out$.download = function (name, uri, options) {\n    if (navigator.msSaveOrOpenBlob) navigator.msSaveOrOpenBlob(uriToBlob(uri), name);else {\n      var saveLink = document.createElement('a');\n      if ('download' in saveLink) {\n        saveLink.download = name;\n        saveLink.style.display = 'none';\n        document.body.appendChild(saveLink);\n        try {\n          var blob = uriToBlob(uri);\n          var url = URL.createObjectURL(blob);\n          saveLink.href = url;\n          saveLink.onclick = function () {\n            return requestAnimationFrame(function () {\n              return URL.revokeObjectURL(url);\n            });\n          };\n        } catch (e) {\n          console.error(e);\n          console.warn('Error while getting object URL. Falling back to string URL.');\n          saveLink.href = uri;\n        }\n        saveLink.click();\n        document.body.removeChild(saveLink);\n      } else if (options && options.popup) {\n        options.popup.document.title = name;\n        options.popup.location.replace(uri);\n      }\n    }\n  };\n\n  out$.saveSvg = function (el, name, options) {\n    var downloadOpts = downloadOptions(); // don't inline, can't be async\n    return requireDomNodePromise(el).then(function (el) {\n      return out$.svgAsDataUri(el, options || {});\n    }).then(function (uri) {\n      return out$.download(name, uri, downloadOpts);\n    });\n  };\n\n  out$.saveSvgAsPng = function (el, name, options) {\n    var downloadOpts = downloadOptions(); // don't inline, can't be async\n    return requireDomNodePromise(el).then(function (el) {\n      return out$.svgAsPngUri(el, options || {});\n    }).then(function (uri) {\n      return out$.download(name, uri, downloadOpts);\n    });\n  };\n})();"],
  "mappings": "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",
  "names": ["isElement", "requireDomNode", "requireDomNodePromise", "isExternal", "getFontMimeTypeFromUrl", "arrayBufferToBase64", "getDimension", "getDimensions", "reEncode", "uriToBlob", "query", "detectCssFont", "inlineImages", "inlineFonts", "styleSheetRules", "inlineCss", "downloadOptions", "outer", "src", "convertToPng", "el"]
}
